
pid_4809_c.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00802800  00802800  000009aa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000936  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000002c  00802800  00802800  000009aa  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000009aa  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000009dc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00000a1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000329b  00000000  00000000  00000a74  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00002523  00000000  00000000  00003d0f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000425  00000000  00000000  00006232  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000e0  00000000  00000000  00006658  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001891  00000000  00000000  00006738  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000167  00000000  00000000  00007fc9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  00008130  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__ctors_end>
   4:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
   8:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
   c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  10:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  14:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  18:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  1c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  20:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  24:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  28:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  2c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  30:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  34:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  38:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  3c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  40:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  44:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  48:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  4c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  50:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  54:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  58:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  5c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  60:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  64:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  68:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  6c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  70:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  74:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  78:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  7c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  80:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  84:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  88:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  8c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  90:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  94:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  98:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  9c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>

000000a0 <__ctors_end>:
  a0:	11 24       	eor	r1, r1
  a2:	1f be       	out	0x3f, r1	; 63
  a4:	cf ef       	ldi	r28, 0xFF	; 255
  a6:	cd bf       	out	0x3d, r28	; 61
  a8:	df e3       	ldi	r29, 0x3F	; 63
  aa:	de bf       	out	0x3e, r29	; 62

000000ac <__do_clear_bss>:
  ac:	28 e2       	ldi	r18, 0x28	; 40
  ae:	a0 e0       	ldi	r26, 0x00	; 0
  b0:	b8 e2       	ldi	r27, 0x28	; 40
  b2:	01 c0       	rjmp	.+2      	; 0xb6 <.do_clear_bss_start>

000000b4 <.do_clear_bss_loop>:
  b4:	1d 92       	st	X+, r1

000000b6 <.do_clear_bss_start>:
  b6:	ac 32       	cpi	r26, 0x2C	; 44
  b8:	b2 07       	cpc	r27, r18
  ba:	e1 f7       	brne	.-8      	; 0xb4 <.do_clear_bss_loop>
  bc:	0e 94 5d 02 	call	0x4ba	; 0x4ba <main>
  c0:	0c 94 99 04 	jmp	0x932	; 0x932 <_exit>

000000c4 <__bad_interrupt>:
  c4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c8 <ADC_init>:
int max_control;
int min_control;

void ADC_init(void) {
	
	ADC0.CTRLC = ADC_PRESC_DIV2_gc | VREF_ADC0REFSEL_VDD_gc;
  c8:	e0 e0       	ldi	r30, 0x00	; 0
  ca:	f6 e0       	ldi	r31, 0x06	; 6
  cc:	80 e1       	ldi	r24, 0x10	; 16
  ce:	82 83       	std	Z+2, r24	; 0x02
	
	ADC0.MUXPOS = ADC_MUXPOS_AIN0_gc + ADC_CHANNEL;
  d0:	16 82       	std	Z+6, r1	; 0x06

	ADC0.CTRLA = ADC_ENABLE_bm;
  d2:	81 e0       	ldi	r24, 0x01	; 1
  d4:	80 83       	st	Z, r24
  d6:	08 95       	ret

000000d8 <pwm_init>:
}

void pwm_init() {
	// Configure TCA0 to operate in Single-Slope PWM mode
	TCA0.SINGLE.CTRLB = TCA_SINGLE_WGMODE_SINGLESLOPE_gc; // Single-slope PWM
  d8:	e0 e0       	ldi	r30, 0x00	; 0
  da:	fa e0       	ldi	r31, 0x0A	; 10
  dc:	83 e0       	ldi	r24, 0x03	; 3
  de:	81 83       	std	Z+1, r24	; 0x01
	TCA0.SINGLE.PER = 255; // Set period for 8-bit resolution (0-255)
  e0:	8f ef       	ldi	r24, 0xFF	; 255
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	86 a3       	std	Z+38, r24	; 0x26
  e6:	97 a3       	std	Z+39, r25	; 0x27

	// Enable Compare Channel 0 (PWM output on WO0)
	TCA0.SINGLE.CTRLB |= TCA_SINGLE_CMP0EN_bm;
  e8:	81 81       	ldd	r24, Z+1	; 0x01
  ea:	80 61       	ori	r24, 0x10	; 16
  ec:	81 83       	std	Z+1, r24	; 0x01

	// Select clock source (prescaler = 64)
	TCA0.SINGLE.CTRLA = TCA_SINGLE_CLKSEL_DIV64_gc | TCA_SINGLE_ENABLE_bm;
  ee:	8b e0       	ldi	r24, 0x0B	; 11
  f0:	80 83       	st	Z, r24

	// Configure the corresponding pin (PA0 for WO0) as output
	PORTB.DIRSET |= PIN0_bm;
  f2:	e0 e2       	ldi	r30, 0x20	; 32
  f4:	f4 e0       	ldi	r31, 0x04	; 4
  f6:	81 81       	ldd	r24, Z+1	; 0x01
  f8:	81 60       	ori	r24, 0x01	; 1
  fa:	81 83       	std	Z+1, r24	; 0x01
  fc:	08 95       	ret

000000fe <setup>:
}

// Custom setup function
void setup() {
	ADC_init();
  fe:	0e 94 64 00 	call	0xc8	; 0xc8 <ADC_init>
	pwm_init();
 102:	0e 94 6c 00 	call	0xd8	; 0xd8 <pwm_init>

	max_control = MAX_VALUE;
 106:	85 e0       	ldi	r24, 0x05	; 5
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	80 93 14 28 	sts	0x2814, r24	; 0x802814 <max_control>
 10e:	90 93 15 28 	sts	0x2815, r25	; 0x802815 <max_control+0x1>
	min_control = MIN_VALUE;
 112:	10 92 08 28 	sts	0x2808, r1	; 0x802808 <min_control>
 116:	10 92 09 28 	sts	0x2809, r1	; 0x802809 <min_control+0x1>
	
	Kp = 1.2;
 11a:	8a e9       	ldi	r24, 0x9A	; 154
 11c:	99 e9       	ldi	r25, 0x99	; 153
 11e:	a9 e9       	ldi	r26, 0x99	; 153
 120:	bf e3       	ldi	r27, 0x3F	; 63
 122:	80 93 26 28 	sts	0x2826, r24	; 0x802826 <Kp>
 126:	90 93 27 28 	sts	0x2827, r25	; 0x802827 <Kp+0x1>
 12a:	a0 93 28 28 	sts	0x2828, r26	; 0x802828 <Kp+0x2>
 12e:	b0 93 29 28 	sts	0x2829, r27	; 0x802829 <Kp+0x3>
	Ki = 0.2;
 132:	8d ec       	ldi	r24, 0xCD	; 205
 134:	9c ec       	ldi	r25, 0xCC	; 204
 136:	ac e4       	ldi	r26, 0x4C	; 76
 138:	be e3       	ldi	r27, 0x3E	; 62
 13a:	80 93 04 28 	sts	0x2804, r24	; 0x802804 <Ki>
 13e:	90 93 05 28 	sts	0x2805, r25	; 0x802805 <Ki+0x1>
 142:	a0 93 06 28 	sts	0x2806, r26	; 0x802806 <Ki+0x2>
 146:	b0 93 07 28 	sts	0x2807, r27	; 0x802807 <Ki+0x3>
	Kd = 0;
 14a:	10 92 1e 28 	sts	0x281E, r1	; 0x80281e <Kd>
 14e:	10 92 1f 28 	sts	0x281F, r1	; 0x80281f <Kd+0x1>
 152:	10 92 20 28 	sts	0x2820, r1	; 0x802820 <Kd+0x2>
 156:	10 92 21 28 	sts	0x2821, r1	; 0x802821 <Kd+0x3>
	setpoint = 3;
 15a:	80 e0       	ldi	r24, 0x00	; 0
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	a0 e4       	ldi	r26, 0x40	; 64
 160:	b0 e4       	ldi	r27, 0x40	; 64
 162:	80 93 0e 28 	sts	0x280E, r24	; 0x80280e <setpoint>
 166:	90 93 0f 28 	sts	0x280F, r25	; 0x80280f <setpoint+0x1>
 16a:	a0 93 10 28 	sts	0x2810, r26	; 0x802810 <setpoint+0x2>
 16e:	b0 93 11 28 	sts	0x2811, r27	; 0x802811 <setpoint+0x3>
 172:	08 95       	ret

00000174 <PID_Control>:
}

void PID_Control() {
 174:	4f 92       	push	r4
 176:	5f 92       	push	r5
 178:	6f 92       	push	r6
 17a:	7f 92       	push	r7
 17c:	8f 92       	push	r8
 17e:	9f 92       	push	r9
 180:	af 92       	push	r10
 182:	bf 92       	push	r11
 184:	cf 92       	push	r12
 186:	df 92       	push	r13
 188:	ef 92       	push	r14
 18a:	ff 92       	push	r15
 18c:	cf 93       	push	r28
 18e:	df 93       	push	r29
 190:	cd b7       	in	r28, 0x3d	; 61
 192:	de b7       	in	r29, 0x3e	; 62
 194:	28 97       	sbiw	r28, 0x08	; 8
 196:	cd bf       	out	0x3d, r28	; 61
 198:	de bf       	out	0x3e, r29	; 62

	unsigned long current_time = last_time + 10; //returns the number of milliseconds passed since the Arduino started running the program
 19a:	80 91 16 28 	lds	r24, 0x2816	; 0x802816 <last_time>
 19e:	90 91 17 28 	lds	r25, 0x2817	; 0x802817 <last_time+0x1>
 1a2:	a0 91 18 28 	lds	r26, 0x2818	; 0x802818 <last_time+0x2>
 1a6:	b0 91 19 28 	lds	r27, 0x2819	; 0x802819 <last_time+0x3>
 1aa:	2c 01       	movw	r4, r24
 1ac:	3d 01       	movw	r6, r26
 1ae:	2a e0       	ldi	r18, 0x0A	; 10
 1b0:	42 0e       	add	r4, r18
 1b2:	51 1c       	adc	r5, r1
 1b4:	61 1c       	adc	r6, r1
 1b6:	71 1c       	adc	r7, r1

	int delta_time = current_time - last_time; //delta time interval

	if (delta_time >= T) {

		double error = setpoint - sensed_output;
 1b8:	60 91 0e 28 	lds	r22, 0x280E	; 0x80280e <setpoint>
 1bc:	70 91 0f 28 	lds	r23, 0x280F	; 0x80280f <setpoint+0x1>
 1c0:	80 91 10 28 	lds	r24, 0x2810	; 0x802810 <setpoint+0x2>
 1c4:	90 91 11 28 	lds	r25, 0x2811	; 0x802811 <setpoint+0x3>
 1c8:	20 91 0a 28 	lds	r18, 0x280A	; 0x80280a <sensed_output>
 1cc:	30 91 0b 28 	lds	r19, 0x280B	; 0x80280b <sensed_output+0x1>
 1d0:	40 91 0c 28 	lds	r20, 0x280C	; 0x80280c <sensed_output+0x2>
 1d4:	50 91 0d 28 	lds	r21, 0x280D	; 0x80280d <sensed_output+0x3>
 1d8:	0e 94 62 02 	call	0x4c4	; 0x4c4 <__subsf3>
 1dc:	6b 01       	movw	r12, r22
 1de:	7c 01       	movw	r14, r24

		total_error += error; //accumalates the error - integral term
 1e0:	20 91 1a 28 	lds	r18, 0x281A	; 0x80281a <total_error>
 1e4:	30 91 1b 28 	lds	r19, 0x281B	; 0x80281b <total_error+0x1>
 1e8:	40 91 1c 28 	lds	r20, 0x281C	; 0x80281c <total_error+0x2>
 1ec:	50 91 1d 28 	lds	r21, 0x281D	; 0x80281d <total_error+0x3>
 1f0:	0e 94 63 02 	call	0x4c6	; 0x4c6 <__addsf3>
 1f4:	4b 01       	movw	r8, r22
 1f6:	5c 01       	movw	r10, r24
 1f8:	60 93 1a 28 	sts	0x281A, r22	; 0x80281a <total_error>
 1fc:	70 93 1b 28 	sts	0x281B, r23	; 0x80281b <total_error+0x1>
 200:	80 93 1c 28 	sts	0x281C, r24	; 0x80281c <total_error+0x2>
 204:	90 93 1d 28 	sts	0x281D, r25	; 0x80281d <total_error+0x3>
		if (total_error >= max_control) total_error = max_control;
 208:	60 91 14 28 	lds	r22, 0x2814	; 0x802814 <max_control>
 20c:	70 91 15 28 	lds	r23, 0x2815	; 0x802815 <max_control+0x1>
 210:	07 2e       	mov	r0, r23
 212:	00 0c       	add	r0, r0
 214:	88 0b       	sbc	r24, r24
 216:	99 0b       	sbc	r25, r25
 218:	0e 94 77 03 	call	0x6ee	; 0x6ee <__floatsisf>
 21c:	69 83       	std	Y+1, r22	; 0x01
 21e:	7a 83       	std	Y+2, r23	; 0x02
 220:	8b 83       	std	Y+3, r24	; 0x03
 222:	9c 83       	std	Y+4, r25	; 0x04
 224:	9b 01       	movw	r18, r22
 226:	ac 01       	movw	r20, r24
 228:	c5 01       	movw	r24, r10
 22a:	b4 01       	movw	r22, r8
 22c:	0e 94 27 04 	call	0x84e	; 0x84e <__gesf2>
 230:	88 23       	and	r24, r24
 232:	6c f0       	brlt	.+26     	; 0x24e <PID_Control+0xda>
 234:	89 81       	ldd	r24, Y+1	; 0x01
 236:	9a 81       	ldd	r25, Y+2	; 0x02
 238:	ab 81       	ldd	r26, Y+3	; 0x03
 23a:	bc 81       	ldd	r27, Y+4	; 0x04
 23c:	80 93 1a 28 	sts	0x281A, r24	; 0x80281a <total_error>
 240:	90 93 1b 28 	sts	0x281B, r25	; 0x80281b <total_error+0x1>
 244:	a0 93 1c 28 	sts	0x281C, r26	; 0x80281c <total_error+0x2>
 248:	b0 93 1d 28 	sts	0x281D, r27	; 0x80281d <total_error+0x3>
 24c:	22 c0       	rjmp	.+68     	; 0x292 <PID_Control+0x11e>
		else if (total_error <= min_control) total_error = min_control;
 24e:	60 91 08 28 	lds	r22, 0x2808	; 0x802808 <min_control>
 252:	70 91 09 28 	lds	r23, 0x2809	; 0x802809 <min_control+0x1>
 256:	07 2e       	mov	r0, r23
 258:	00 0c       	add	r0, r0
 25a:	88 0b       	sbc	r24, r24
 25c:	99 0b       	sbc	r25, r25
 25e:	0e 94 77 03 	call	0x6ee	; 0x6ee <__floatsisf>
 262:	6d 83       	std	Y+5, r22	; 0x05
 264:	7e 83       	std	Y+6, r23	; 0x06
 266:	8f 83       	std	Y+7, r24	; 0x07
 268:	98 87       	std	Y+8, r25	; 0x08
 26a:	9b 01       	movw	r18, r22
 26c:	ac 01       	movw	r20, r24
 26e:	c5 01       	movw	r24, r10
 270:	b4 01       	movw	r22, r8
 272:	0e 94 cf 02 	call	0x59e	; 0x59e <__cmpsf2>
 276:	18 16       	cp	r1, r24
 278:	64 f0       	brlt	.+24     	; 0x292 <PID_Control+0x11e>
 27a:	8d 81       	ldd	r24, Y+5	; 0x05
 27c:	9e 81       	ldd	r25, Y+6	; 0x06
 27e:	af 81       	ldd	r26, Y+7	; 0x07
 280:	b8 85       	ldd	r27, Y+8	; 0x08
 282:	80 93 1a 28 	sts	0x281A, r24	; 0x80281a <total_error>
 286:	90 93 1b 28 	sts	0x281B, r25	; 0x80281b <total_error+0x1>
 28a:	a0 93 1c 28 	sts	0x281C, r26	; 0x80281c <total_error+0x2>
 28e:	b0 93 1d 28 	sts	0x281D, r27	; 0x80281d <total_error+0x3>

		double delta_error = error - last_error; //difference of error for derivative term
 292:	20 91 00 28 	lds	r18, 0x2800	; 0x802800 <__DATA_REGION_ORIGIN__>
 296:	30 91 01 28 	lds	r19, 0x2801	; 0x802801 <__DATA_REGION_ORIGIN__+0x1>
 29a:	40 91 02 28 	lds	r20, 0x2802	; 0x802802 <__DATA_REGION_ORIGIN__+0x2>
 29e:	50 91 03 28 	lds	r21, 0x2803	; 0x802803 <__DATA_REGION_ORIGIN__+0x3>
 2a2:	c7 01       	movw	r24, r14
 2a4:	b6 01       	movw	r22, r12
 2a6:	0e 94 62 02 	call	0x4c4	; 0x4c4 <__subsf3>
 2aa:	6d 83       	std	Y+5, r22	; 0x05
 2ac:	7e 83       	std	Y+6, r23	; 0x06
 2ae:	8f 83       	std	Y+7, r24	; 0x07
 2b0:	98 87       	std	Y+8, r25	; 0x08

		control_signal = Kp * error + (Ki * T) * total_error + (Kd / T) * delta_error; //PID control compute
 2b2:	20 91 26 28 	lds	r18, 0x2826	; 0x802826 <Kp>
 2b6:	30 91 27 28 	lds	r19, 0x2827	; 0x802827 <Kp+0x1>
 2ba:	40 91 28 28 	lds	r20, 0x2828	; 0x802828 <Kp+0x2>
 2be:	50 91 29 28 	lds	r21, 0x2829	; 0x802829 <Kp+0x3>
 2c2:	c7 01       	movw	r24, r14
 2c4:	b6 01       	movw	r22, r12
 2c6:	0e 94 2c 04 	call	0x858	; 0x858 <__mulsf3>
 2ca:	4b 01       	movw	r8, r22
 2cc:	5c 01       	movw	r10, r24
 2ce:	20 e0       	ldi	r18, 0x00	; 0
 2d0:	30 e0       	ldi	r19, 0x00	; 0
 2d2:	40 e2       	ldi	r20, 0x20	; 32
 2d4:	51 e4       	ldi	r21, 0x41	; 65
 2d6:	60 91 04 28 	lds	r22, 0x2804	; 0x802804 <Ki>
 2da:	70 91 05 28 	lds	r23, 0x2805	; 0x802805 <Ki+0x1>
 2de:	80 91 06 28 	lds	r24, 0x2806	; 0x802806 <Ki+0x2>
 2e2:	90 91 07 28 	lds	r25, 0x2807	; 0x802807 <Ki+0x3>
 2e6:	0e 94 2c 04 	call	0x858	; 0x858 <__mulsf3>
 2ea:	20 91 1a 28 	lds	r18, 0x281A	; 0x80281a <total_error>
 2ee:	30 91 1b 28 	lds	r19, 0x281B	; 0x80281b <total_error+0x1>
 2f2:	40 91 1c 28 	lds	r20, 0x281C	; 0x80281c <total_error+0x2>
 2f6:	50 91 1d 28 	lds	r21, 0x281D	; 0x80281d <total_error+0x3>
 2fa:	0e 94 2c 04 	call	0x858	; 0x858 <__mulsf3>
 2fe:	9b 01       	movw	r18, r22
 300:	ac 01       	movw	r20, r24
 302:	c5 01       	movw	r24, r10
 304:	b4 01       	movw	r22, r8
 306:	0e 94 63 02 	call	0x4c6	; 0x4c6 <__addsf3>
 30a:	4b 01       	movw	r8, r22
 30c:	5c 01       	movw	r10, r24
 30e:	20 e0       	ldi	r18, 0x00	; 0
 310:	30 e0       	ldi	r19, 0x00	; 0
 312:	40 e2       	ldi	r20, 0x20	; 32
 314:	51 e4       	ldi	r21, 0x41	; 65
 316:	60 91 1e 28 	lds	r22, 0x281E	; 0x80281e <Kd>
 31a:	70 91 1f 28 	lds	r23, 0x281F	; 0x80281f <Kd+0x1>
 31e:	80 91 20 28 	lds	r24, 0x2820	; 0x802820 <Kd+0x2>
 322:	90 91 21 28 	lds	r25, 0x2821	; 0x802821 <Kd+0x3>
 326:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <__divsf3>
 32a:	9b 01       	movw	r18, r22
 32c:	ac 01       	movw	r20, r24
 32e:	6d 81       	ldd	r22, Y+5	; 0x05
 330:	7e 81       	ldd	r23, Y+6	; 0x06
 332:	8f 81       	ldd	r24, Y+7	; 0x07
 334:	98 85       	ldd	r25, Y+8	; 0x08
 336:	0e 94 2c 04 	call	0x858	; 0x858 <__mulsf3>
 33a:	9b 01       	movw	r18, r22
 33c:	ac 01       	movw	r20, r24
 33e:	c5 01       	movw	r24, r10
 340:	b4 01       	movw	r22, r8
 342:	0e 94 63 02 	call	0x4c6	; 0x4c6 <__addsf3>
 346:	4b 01       	movw	r8, r22
 348:	5c 01       	movw	r10, r24
 34a:	60 93 22 28 	sts	0x2822, r22	; 0x802822 <control_signal>
 34e:	70 93 23 28 	sts	0x2823, r23	; 0x802823 <control_signal+0x1>
 352:	80 93 24 28 	sts	0x2824, r24	; 0x802824 <control_signal+0x2>
 356:	90 93 25 28 	sts	0x2825, r25	; 0x802825 <control_signal+0x3>
		if (control_signal >= max_control) control_signal = max_control;
 35a:	9b 01       	movw	r18, r22
 35c:	ac 01       	movw	r20, r24
 35e:	69 81       	ldd	r22, Y+1	; 0x01
 360:	7a 81       	ldd	r23, Y+2	; 0x02
 362:	8b 81       	ldd	r24, Y+3	; 0x03
 364:	9c 81       	ldd	r25, Y+4	; 0x04
 366:	0e 94 cf 02 	call	0x59e	; 0x59e <__cmpsf2>
 36a:	18 16       	cp	r1, r24
 36c:	6c f0       	brlt	.+26     	; 0x388 <PID_Control+0x214>
 36e:	89 81       	ldd	r24, Y+1	; 0x01
 370:	9a 81       	ldd	r25, Y+2	; 0x02
 372:	ab 81       	ldd	r26, Y+3	; 0x03
 374:	bc 81       	ldd	r27, Y+4	; 0x04
 376:	80 93 22 28 	sts	0x2822, r24	; 0x802822 <control_signal>
 37a:	90 93 23 28 	sts	0x2823, r25	; 0x802823 <control_signal+0x1>
 37e:	a0 93 24 28 	sts	0x2824, r26	; 0x802824 <control_signal+0x2>
 382:	b0 93 25 28 	sts	0x2825, r27	; 0x802825 <control_signal+0x3>
 386:	22 c0       	rjmp	.+68     	; 0x3cc <PID_Control+0x258>
		else if (control_signal <= min_control) control_signal = min_control;
 388:	60 91 08 28 	lds	r22, 0x2808	; 0x802808 <min_control>
 38c:	70 91 09 28 	lds	r23, 0x2809	; 0x802809 <min_control+0x1>
 390:	07 2e       	mov	r0, r23
 392:	00 0c       	add	r0, r0
 394:	88 0b       	sbc	r24, r24
 396:	99 0b       	sbc	r25, r25
 398:	0e 94 77 03 	call	0x6ee	; 0x6ee <__floatsisf>
 39c:	69 83       	std	Y+1, r22	; 0x01
 39e:	7a 83       	std	Y+2, r23	; 0x02
 3a0:	8b 83       	std	Y+3, r24	; 0x03
 3a2:	9c 83       	std	Y+4, r25	; 0x04
 3a4:	9b 01       	movw	r18, r22
 3a6:	ac 01       	movw	r20, r24
 3a8:	c5 01       	movw	r24, r10
 3aa:	b4 01       	movw	r22, r8
 3ac:	0e 94 cf 02 	call	0x59e	; 0x59e <__cmpsf2>
 3b0:	18 16       	cp	r1, r24
 3b2:	64 f0       	brlt	.+24     	; 0x3cc <PID_Control+0x258>
 3b4:	89 81       	ldd	r24, Y+1	; 0x01
 3b6:	9a 81       	ldd	r25, Y+2	; 0x02
 3b8:	ab 81       	ldd	r26, Y+3	; 0x03
 3ba:	bc 81       	ldd	r27, Y+4	; 0x04
 3bc:	80 93 22 28 	sts	0x2822, r24	; 0x802822 <control_signal>
 3c0:	90 93 23 28 	sts	0x2823, r25	; 0x802823 <control_signal+0x1>
 3c4:	a0 93 24 28 	sts	0x2824, r26	; 0x802824 <control_signal+0x2>
 3c8:	b0 93 25 28 	sts	0x2825, r27	; 0x802825 <control_signal+0x3>

		last_error = error;
 3cc:	c0 92 00 28 	sts	0x2800, r12	; 0x802800 <__DATA_REGION_ORIGIN__>
 3d0:	d0 92 01 28 	sts	0x2801, r13	; 0x802801 <__DATA_REGION_ORIGIN__+0x1>
 3d4:	e0 92 02 28 	sts	0x2802, r14	; 0x802802 <__DATA_REGION_ORIGIN__+0x2>
 3d8:	f0 92 03 28 	sts	0x2803, r15	; 0x802803 <__DATA_REGION_ORIGIN__+0x3>
		last_time = current_time;
 3dc:	40 92 16 28 	sts	0x2816, r4	; 0x802816 <last_time>
 3e0:	50 92 17 28 	sts	0x2817, r5	; 0x802817 <last_time+0x1>
 3e4:	60 92 18 28 	sts	0x2818, r6	; 0x802818 <last_time+0x2>
 3e8:	70 92 19 28 	sts	0x2819, r7	; 0x802819 <last_time+0x3>
	}
}
 3ec:	28 96       	adiw	r28, 0x08	; 8
 3ee:	cd bf       	out	0x3d, r28	; 61
 3f0:	de bf       	out	0x3e, r29	; 62
 3f2:	df 91       	pop	r29
 3f4:	cf 91       	pop	r28
 3f6:	ff 90       	pop	r15
 3f8:	ef 90       	pop	r14
 3fa:	df 90       	pop	r13
 3fc:	cf 90       	pop	r12
 3fe:	bf 90       	pop	r11
 400:	af 90       	pop	r10
 402:	9f 90       	pop	r9
 404:	8f 90       	pop	r8
 406:	7f 90       	pop	r7
 408:	6f 90       	pop	r6
 40a:	5f 90       	pop	r5
 40c:	4f 90       	pop	r4
 40e:	08 95       	ret

00000410 <ADC_read>:

uint16_t ADC_read(void) {
	// Start a conversion
	ADC0.COMMAND = ADC_STCONV_bm;
 410:	81 e0       	ldi	r24, 0x01	; 1
 412:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7f4608>

	// Wait for the conversion to complete
	while (!(ADC0.INTFLAGS & ADC_RESRDY_bm));
 416:	80 91 0b 06 	lds	r24, 0x060B	; 0x80060b <__TEXT_REGION_LENGTH__+0x7f460b>
 41a:	80 ff       	sbrs	r24, 0
 41c:	fc cf       	rjmp	.-8      	; 0x416 <ADC_read+0x6>

	// Clear the interrupt flag
	ADC0.INTFLAGS |= ADC_RESRDY_bm;
 41e:	e0 e0       	ldi	r30, 0x00	; 0
 420:	f6 e0       	ldi	r31, 0x06	; 6
 422:	83 85       	ldd	r24, Z+11	; 0x0b
 424:	81 60       	ori	r24, 0x01	; 1
 426:	83 87       	std	Z+11, r24	; 0x0b

	// Return the ADC result
	return ADC0.RES;
 428:	80 89       	ldd	r24, Z+16	; 0x10
 42a:	91 89       	ldd	r25, Z+17	; 0x11
}
 42c:	08 95       	ret

0000042e <analogWrite>:

void analogWrite(uint8_t dutyCycle) {
	TCA0.SINGLE.CMP0 = dutyCycle; // Set duty cycle (0-255)
 42e:	90 e0       	ldi	r25, 0x00	; 0
 430:	80 93 28 0a 	sts	0x0A28, r24	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7f4a28>
 434:	90 93 29 0a 	sts	0x0A29, r25	; 0x800a29 <__TEXT_REGION_LENGTH__+0x7f4a29>
 438:	08 95       	ret

0000043a <loop>:
}

void loop() {
	a_in = ADC_read(); // Read current output voltage with ADC
 43a:	0e 94 08 02 	call	0x410	; 0x410 <ADC_read>
 43e:	80 93 2a 28 	sts	0x282A, r24	; 0x80282a <a_in>
 442:	90 93 2b 28 	sts	0x282B, r25	; 0x80282b <a_in+0x1>
	sensed_output = (double)a_in*5/1024; // Convert to volts
 446:	bc 01       	movw	r22, r24
 448:	99 0f       	add	r25, r25
 44a:	88 0b       	sbc	r24, r24
 44c:	99 0b       	sbc	r25, r25
 44e:	0e 94 77 03 	call	0x6ee	; 0x6ee <__floatsisf>
 452:	20 e0       	ldi	r18, 0x00	; 0
 454:	30 e0       	ldi	r19, 0x00	; 0
 456:	40 ea       	ldi	r20, 0xA0	; 160
 458:	50 e4       	ldi	r21, 0x40	; 64
 45a:	0e 94 2c 04 	call	0x858	; 0x858 <__mulsf3>
 45e:	20 e0       	ldi	r18, 0x00	; 0
 460:	30 e0       	ldi	r19, 0x00	; 0
 462:	40 e8       	ldi	r20, 0x80	; 128
 464:	5a e3       	ldi	r21, 0x3A	; 58
 466:	0e 94 2c 04 	call	0x858	; 0x858 <__mulsf3>
 46a:	60 93 0a 28 	sts	0x280A, r22	; 0x80280a <sensed_output>
 46e:	70 93 0b 28 	sts	0x280B, r23	; 0x80280b <sensed_output+0x1>
 472:	80 93 0c 28 	sts	0x280C, r24	; 0x80280c <sensed_output+0x2>
 476:	90 93 0d 28 	sts	0x280D, r25	; 0x80280d <sensed_output+0x3>
	
	PID_Control(); // Calls the PID function every T interval and outputs a control signal
 47a:	0e 94 ba 00 	call	0x174	; 0x174 <PID_Control>
	
	pwm_out = (unsigned int)(control_signal*255/5); // Convert 0...5 V to PWM 8-bit value (0...255)
 47e:	20 e0       	ldi	r18, 0x00	; 0
 480:	30 e0       	ldi	r19, 0x00	; 0
 482:	4f e7       	ldi	r20, 0x7F	; 127
 484:	53 e4       	ldi	r21, 0x43	; 67
 486:	60 91 22 28 	lds	r22, 0x2822	; 0x802822 <control_signal>
 48a:	70 91 23 28 	lds	r23, 0x2823	; 0x802823 <control_signal+0x1>
 48e:	80 91 24 28 	lds	r24, 0x2824	; 0x802824 <control_signal+0x2>
 492:	90 91 25 28 	lds	r25, 0x2825	; 0x802825 <control_signal+0x3>
 496:	0e 94 2c 04 	call	0x858	; 0x858 <__mulsf3>
 49a:	20 e0       	ldi	r18, 0x00	; 0
 49c:	30 e0       	ldi	r19, 0x00	; 0
 49e:	40 ea       	ldi	r20, 0xA0	; 160
 4a0:	50 e4       	ldi	r21, 0x40	; 64
 4a2:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <__divsf3>
 4a6:	0e 94 46 03 	call	0x68c	; 0x68c <__fixunssfsi>
 4aa:	86 2f       	mov	r24, r22
 4ac:	60 93 12 28 	sts	0x2812, r22	; 0x802812 <pwm_out>
 4b0:	70 93 13 28 	sts	0x2813, r23	; 0x802813 <pwm_out+0x1>
	analogWrite(pwm_out);
 4b4:	0e 94 17 02 	call	0x42e	; 0x42e <analogWrite>
 4b8:	08 95       	ret

000004ba <main>:

}

int main() {
	setup();
 4ba:	0e 94 7f 00 	call	0xfe	; 0xfe <setup>
	for (;;) {
		loop();
 4be:	0e 94 1d 02 	call	0x43a	; 0x43a <loop>
 4c2:	fd cf       	rjmp	.-6      	; 0x4be <main+0x4>

000004c4 <__subsf3>:
 4c4:	50 58       	subi	r21, 0x80	; 128

000004c6 <__addsf3>:
 4c6:	bb 27       	eor	r27, r27
 4c8:	aa 27       	eor	r26, r26
 4ca:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <__addsf3x>
 4ce:	0c 94 ed 03 	jmp	0x7da	; 0x7da <__fp_round>
 4d2:	0e 94 df 03 	call	0x7be	; 0x7be <__fp_pscA>
 4d6:	38 f0       	brcs	.+14     	; 0x4e6 <__addsf3+0x20>
 4d8:	0e 94 e6 03 	call	0x7cc	; 0x7cc <__fp_pscB>
 4dc:	20 f0       	brcs	.+8      	; 0x4e6 <__addsf3+0x20>
 4de:	39 f4       	brne	.+14     	; 0x4ee <__addsf3+0x28>
 4e0:	9f 3f       	cpi	r25, 0xFF	; 255
 4e2:	19 f4       	brne	.+6      	; 0x4ea <__addsf3+0x24>
 4e4:	26 f4       	brtc	.+8      	; 0x4ee <__addsf3+0x28>
 4e6:	0c 94 dc 03 	jmp	0x7b8	; 0x7b8 <__fp_nan>
 4ea:	0e f4       	brtc	.+2      	; 0x4ee <__addsf3+0x28>
 4ec:	e0 95       	com	r30
 4ee:	e7 fb       	bst	r30, 7
 4f0:	0c 94 d6 03 	jmp	0x7ac	; 0x7ac <__fp_inf>

000004f4 <__addsf3x>:
 4f4:	e9 2f       	mov	r30, r25
 4f6:	0e 94 fe 03 	call	0x7fc	; 0x7fc <__fp_split3>
 4fa:	58 f3       	brcs	.-42     	; 0x4d2 <__addsf3+0xc>
 4fc:	ba 17       	cp	r27, r26
 4fe:	62 07       	cpc	r22, r18
 500:	73 07       	cpc	r23, r19
 502:	84 07       	cpc	r24, r20
 504:	95 07       	cpc	r25, r21
 506:	20 f0       	brcs	.+8      	; 0x510 <__addsf3x+0x1c>
 508:	79 f4       	brne	.+30     	; 0x528 <__addsf3x+0x34>
 50a:	a6 f5       	brtc	.+104    	; 0x574 <__addsf3x+0x80>
 50c:	0c 94 20 04 	jmp	0x840	; 0x840 <__fp_zero>
 510:	0e f4       	brtc	.+2      	; 0x514 <__addsf3x+0x20>
 512:	e0 95       	com	r30
 514:	0b 2e       	mov	r0, r27
 516:	ba 2f       	mov	r27, r26
 518:	a0 2d       	mov	r26, r0
 51a:	0b 01       	movw	r0, r22
 51c:	b9 01       	movw	r22, r18
 51e:	90 01       	movw	r18, r0
 520:	0c 01       	movw	r0, r24
 522:	ca 01       	movw	r24, r20
 524:	a0 01       	movw	r20, r0
 526:	11 24       	eor	r1, r1
 528:	ff 27       	eor	r31, r31
 52a:	59 1b       	sub	r21, r25
 52c:	99 f0       	breq	.+38     	; 0x554 <__addsf3x+0x60>
 52e:	59 3f       	cpi	r21, 0xF9	; 249
 530:	50 f4       	brcc	.+20     	; 0x546 <__addsf3x+0x52>
 532:	50 3e       	cpi	r21, 0xE0	; 224
 534:	68 f1       	brcs	.+90     	; 0x590 <__addsf3x+0x9c>
 536:	1a 16       	cp	r1, r26
 538:	f0 40       	sbci	r31, 0x00	; 0
 53a:	a2 2f       	mov	r26, r18
 53c:	23 2f       	mov	r18, r19
 53e:	34 2f       	mov	r19, r20
 540:	44 27       	eor	r20, r20
 542:	58 5f       	subi	r21, 0xF8	; 248
 544:	f3 cf       	rjmp	.-26     	; 0x52c <__addsf3x+0x38>
 546:	46 95       	lsr	r20
 548:	37 95       	ror	r19
 54a:	27 95       	ror	r18
 54c:	a7 95       	ror	r26
 54e:	f0 40       	sbci	r31, 0x00	; 0
 550:	53 95       	inc	r21
 552:	c9 f7       	brne	.-14     	; 0x546 <__addsf3x+0x52>
 554:	7e f4       	brtc	.+30     	; 0x574 <__addsf3x+0x80>
 556:	1f 16       	cp	r1, r31
 558:	ba 0b       	sbc	r27, r26
 55a:	62 0b       	sbc	r22, r18
 55c:	73 0b       	sbc	r23, r19
 55e:	84 0b       	sbc	r24, r20
 560:	ba f0       	brmi	.+46     	; 0x590 <__addsf3x+0x9c>
 562:	91 50       	subi	r25, 0x01	; 1
 564:	a1 f0       	breq	.+40     	; 0x58e <__addsf3x+0x9a>
 566:	ff 0f       	add	r31, r31
 568:	bb 1f       	adc	r27, r27
 56a:	66 1f       	adc	r22, r22
 56c:	77 1f       	adc	r23, r23
 56e:	88 1f       	adc	r24, r24
 570:	c2 f7       	brpl	.-16     	; 0x562 <__addsf3x+0x6e>
 572:	0e c0       	rjmp	.+28     	; 0x590 <__addsf3x+0x9c>
 574:	ba 0f       	add	r27, r26
 576:	62 1f       	adc	r22, r18
 578:	73 1f       	adc	r23, r19
 57a:	84 1f       	adc	r24, r20
 57c:	48 f4       	brcc	.+18     	; 0x590 <__addsf3x+0x9c>
 57e:	87 95       	ror	r24
 580:	77 95       	ror	r23
 582:	67 95       	ror	r22
 584:	b7 95       	ror	r27
 586:	f7 95       	ror	r31
 588:	9e 3f       	cpi	r25, 0xFE	; 254
 58a:	08 f0       	brcs	.+2      	; 0x58e <__addsf3x+0x9a>
 58c:	b0 cf       	rjmp	.-160    	; 0x4ee <__addsf3+0x28>
 58e:	93 95       	inc	r25
 590:	88 0f       	add	r24, r24
 592:	08 f0       	brcs	.+2      	; 0x596 <__addsf3x+0xa2>
 594:	99 27       	eor	r25, r25
 596:	ee 0f       	add	r30, r30
 598:	97 95       	ror	r25
 59a:	87 95       	ror	r24
 59c:	08 95       	ret

0000059e <__cmpsf2>:
 59e:	0e 94 b2 03 	call	0x764	; 0x764 <__fp_cmp>
 5a2:	08 f4       	brcc	.+2      	; 0x5a6 <__cmpsf2+0x8>
 5a4:	81 e0       	ldi	r24, 0x01	; 1
 5a6:	08 95       	ret

000005a8 <__divsf3>:
 5a8:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <__divsf3x>
 5ac:	0c 94 ed 03 	jmp	0x7da	; 0x7da <__fp_round>
 5b0:	0e 94 e6 03 	call	0x7cc	; 0x7cc <__fp_pscB>
 5b4:	58 f0       	brcs	.+22     	; 0x5cc <__divsf3+0x24>
 5b6:	0e 94 df 03 	call	0x7be	; 0x7be <__fp_pscA>
 5ba:	40 f0       	brcs	.+16     	; 0x5cc <__divsf3+0x24>
 5bc:	29 f4       	brne	.+10     	; 0x5c8 <__divsf3+0x20>
 5be:	5f 3f       	cpi	r21, 0xFF	; 255
 5c0:	29 f0       	breq	.+10     	; 0x5cc <__divsf3+0x24>
 5c2:	0c 94 d6 03 	jmp	0x7ac	; 0x7ac <__fp_inf>
 5c6:	51 11       	cpse	r21, r1
 5c8:	0c 94 21 04 	jmp	0x842	; 0x842 <__fp_szero>
 5cc:	0c 94 dc 03 	jmp	0x7b8	; 0x7b8 <__fp_nan>

000005d0 <__divsf3x>:
 5d0:	0e 94 fe 03 	call	0x7fc	; 0x7fc <__fp_split3>
 5d4:	68 f3       	brcs	.-38     	; 0x5b0 <__divsf3+0x8>

000005d6 <__divsf3_pse>:
 5d6:	99 23       	and	r25, r25
 5d8:	b1 f3       	breq	.-20     	; 0x5c6 <__divsf3+0x1e>
 5da:	55 23       	and	r21, r21
 5dc:	91 f3       	breq	.-28     	; 0x5c2 <__divsf3+0x1a>
 5de:	95 1b       	sub	r25, r21
 5e0:	55 0b       	sbc	r21, r21
 5e2:	bb 27       	eor	r27, r27
 5e4:	aa 27       	eor	r26, r26
 5e6:	62 17       	cp	r22, r18
 5e8:	73 07       	cpc	r23, r19
 5ea:	84 07       	cpc	r24, r20
 5ec:	38 f0       	brcs	.+14     	; 0x5fc <__divsf3_pse+0x26>
 5ee:	9f 5f       	subi	r25, 0xFF	; 255
 5f0:	5f 4f       	sbci	r21, 0xFF	; 255
 5f2:	22 0f       	add	r18, r18
 5f4:	33 1f       	adc	r19, r19
 5f6:	44 1f       	adc	r20, r20
 5f8:	aa 1f       	adc	r26, r26
 5fa:	a9 f3       	breq	.-22     	; 0x5e6 <__divsf3_pse+0x10>
 5fc:	35 d0       	rcall	.+106    	; 0x668 <__divsf3_pse+0x92>
 5fe:	0e 2e       	mov	r0, r30
 600:	3a f0       	brmi	.+14     	; 0x610 <__divsf3_pse+0x3a>
 602:	e0 e8       	ldi	r30, 0x80	; 128
 604:	32 d0       	rcall	.+100    	; 0x66a <__divsf3_pse+0x94>
 606:	91 50       	subi	r25, 0x01	; 1
 608:	50 40       	sbci	r21, 0x00	; 0
 60a:	e6 95       	lsr	r30
 60c:	00 1c       	adc	r0, r0
 60e:	ca f7       	brpl	.-14     	; 0x602 <__divsf3_pse+0x2c>
 610:	2b d0       	rcall	.+86     	; 0x668 <__divsf3_pse+0x92>
 612:	fe 2f       	mov	r31, r30
 614:	29 d0       	rcall	.+82     	; 0x668 <__divsf3_pse+0x92>
 616:	66 0f       	add	r22, r22
 618:	77 1f       	adc	r23, r23
 61a:	88 1f       	adc	r24, r24
 61c:	bb 1f       	adc	r27, r27
 61e:	26 17       	cp	r18, r22
 620:	37 07       	cpc	r19, r23
 622:	48 07       	cpc	r20, r24
 624:	ab 07       	cpc	r26, r27
 626:	b0 e8       	ldi	r27, 0x80	; 128
 628:	09 f0       	breq	.+2      	; 0x62c <__divsf3_pse+0x56>
 62a:	bb 0b       	sbc	r27, r27
 62c:	80 2d       	mov	r24, r0
 62e:	bf 01       	movw	r22, r30
 630:	ff 27       	eor	r31, r31
 632:	93 58       	subi	r25, 0x83	; 131
 634:	5f 4f       	sbci	r21, 0xFF	; 255
 636:	3a f0       	brmi	.+14     	; 0x646 <__divsf3_pse+0x70>
 638:	9e 3f       	cpi	r25, 0xFE	; 254
 63a:	51 05       	cpc	r21, r1
 63c:	78 f0       	brcs	.+30     	; 0x65c <__divsf3_pse+0x86>
 63e:	0c 94 d6 03 	jmp	0x7ac	; 0x7ac <__fp_inf>
 642:	0c 94 21 04 	jmp	0x842	; 0x842 <__fp_szero>
 646:	5f 3f       	cpi	r21, 0xFF	; 255
 648:	e4 f3       	brlt	.-8      	; 0x642 <__divsf3_pse+0x6c>
 64a:	98 3e       	cpi	r25, 0xE8	; 232
 64c:	d4 f3       	brlt	.-12     	; 0x642 <__divsf3_pse+0x6c>
 64e:	86 95       	lsr	r24
 650:	77 95       	ror	r23
 652:	67 95       	ror	r22
 654:	b7 95       	ror	r27
 656:	f7 95       	ror	r31
 658:	9f 5f       	subi	r25, 0xFF	; 255
 65a:	c9 f7       	brne	.-14     	; 0x64e <__divsf3_pse+0x78>
 65c:	88 0f       	add	r24, r24
 65e:	91 1d       	adc	r25, r1
 660:	96 95       	lsr	r25
 662:	87 95       	ror	r24
 664:	97 f9       	bld	r25, 7
 666:	08 95       	ret
 668:	e1 e0       	ldi	r30, 0x01	; 1
 66a:	66 0f       	add	r22, r22
 66c:	77 1f       	adc	r23, r23
 66e:	88 1f       	adc	r24, r24
 670:	bb 1f       	adc	r27, r27
 672:	62 17       	cp	r22, r18
 674:	73 07       	cpc	r23, r19
 676:	84 07       	cpc	r24, r20
 678:	ba 07       	cpc	r27, r26
 67a:	20 f0       	brcs	.+8      	; 0x684 <__divsf3_pse+0xae>
 67c:	62 1b       	sub	r22, r18
 67e:	73 0b       	sbc	r23, r19
 680:	84 0b       	sbc	r24, r20
 682:	ba 0b       	sbc	r27, r26
 684:	ee 1f       	adc	r30, r30
 686:	88 f7       	brcc	.-30     	; 0x66a <__divsf3_pse+0x94>
 688:	e0 95       	com	r30
 68a:	08 95       	ret

0000068c <__fixunssfsi>:
 68c:	0e 94 06 04 	call	0x80c	; 0x80c <__fp_splitA>
 690:	88 f0       	brcs	.+34     	; 0x6b4 <__fixunssfsi+0x28>
 692:	9f 57       	subi	r25, 0x7F	; 127
 694:	98 f0       	brcs	.+38     	; 0x6bc <__fixunssfsi+0x30>
 696:	b9 2f       	mov	r27, r25
 698:	99 27       	eor	r25, r25
 69a:	b7 51       	subi	r27, 0x17	; 23
 69c:	b0 f0       	brcs	.+44     	; 0x6ca <__fixunssfsi+0x3e>
 69e:	e1 f0       	breq	.+56     	; 0x6d8 <__fixunssfsi+0x4c>
 6a0:	66 0f       	add	r22, r22
 6a2:	77 1f       	adc	r23, r23
 6a4:	88 1f       	adc	r24, r24
 6a6:	99 1f       	adc	r25, r25
 6a8:	1a f0       	brmi	.+6      	; 0x6b0 <__fixunssfsi+0x24>
 6aa:	ba 95       	dec	r27
 6ac:	c9 f7       	brne	.-14     	; 0x6a0 <__fixunssfsi+0x14>
 6ae:	14 c0       	rjmp	.+40     	; 0x6d8 <__fixunssfsi+0x4c>
 6b0:	b1 30       	cpi	r27, 0x01	; 1
 6b2:	91 f0       	breq	.+36     	; 0x6d8 <__fixunssfsi+0x4c>
 6b4:	0e 94 20 04 	call	0x840	; 0x840 <__fp_zero>
 6b8:	b1 e0       	ldi	r27, 0x01	; 1
 6ba:	08 95       	ret
 6bc:	0c 94 20 04 	jmp	0x840	; 0x840 <__fp_zero>
 6c0:	67 2f       	mov	r22, r23
 6c2:	78 2f       	mov	r23, r24
 6c4:	88 27       	eor	r24, r24
 6c6:	b8 5f       	subi	r27, 0xF8	; 248
 6c8:	39 f0       	breq	.+14     	; 0x6d8 <__fixunssfsi+0x4c>
 6ca:	b9 3f       	cpi	r27, 0xF9	; 249
 6cc:	cc f3       	brlt	.-14     	; 0x6c0 <__fixunssfsi+0x34>
 6ce:	86 95       	lsr	r24
 6d0:	77 95       	ror	r23
 6d2:	67 95       	ror	r22
 6d4:	b3 95       	inc	r27
 6d6:	d9 f7       	brne	.-10     	; 0x6ce <__fixunssfsi+0x42>
 6d8:	3e f4       	brtc	.+14     	; 0x6e8 <__fixunssfsi+0x5c>
 6da:	90 95       	com	r25
 6dc:	80 95       	com	r24
 6de:	70 95       	com	r23
 6e0:	61 95       	neg	r22
 6e2:	7f 4f       	sbci	r23, 0xFF	; 255
 6e4:	8f 4f       	sbci	r24, 0xFF	; 255
 6e6:	9f 4f       	sbci	r25, 0xFF	; 255
 6e8:	08 95       	ret

000006ea <__floatunsisf>:
 6ea:	e8 94       	clt
 6ec:	09 c0       	rjmp	.+18     	; 0x700 <__floatsisf+0x12>

000006ee <__floatsisf>:
 6ee:	97 fb       	bst	r25, 7
 6f0:	3e f4       	brtc	.+14     	; 0x700 <__floatsisf+0x12>
 6f2:	90 95       	com	r25
 6f4:	80 95       	com	r24
 6f6:	70 95       	com	r23
 6f8:	61 95       	neg	r22
 6fa:	7f 4f       	sbci	r23, 0xFF	; 255
 6fc:	8f 4f       	sbci	r24, 0xFF	; 255
 6fe:	9f 4f       	sbci	r25, 0xFF	; 255
 700:	99 23       	and	r25, r25
 702:	a9 f0       	breq	.+42     	; 0x72e <__floatsisf+0x40>
 704:	f9 2f       	mov	r31, r25
 706:	96 e9       	ldi	r25, 0x96	; 150
 708:	bb 27       	eor	r27, r27
 70a:	93 95       	inc	r25
 70c:	f6 95       	lsr	r31
 70e:	87 95       	ror	r24
 710:	77 95       	ror	r23
 712:	67 95       	ror	r22
 714:	b7 95       	ror	r27
 716:	f1 11       	cpse	r31, r1
 718:	f8 cf       	rjmp	.-16     	; 0x70a <__floatsisf+0x1c>
 71a:	fa f4       	brpl	.+62     	; 0x75a <__floatsisf+0x6c>
 71c:	bb 0f       	add	r27, r27
 71e:	11 f4       	brne	.+4      	; 0x724 <__floatsisf+0x36>
 720:	60 ff       	sbrs	r22, 0
 722:	1b c0       	rjmp	.+54     	; 0x75a <__floatsisf+0x6c>
 724:	6f 5f       	subi	r22, 0xFF	; 255
 726:	7f 4f       	sbci	r23, 0xFF	; 255
 728:	8f 4f       	sbci	r24, 0xFF	; 255
 72a:	9f 4f       	sbci	r25, 0xFF	; 255
 72c:	16 c0       	rjmp	.+44     	; 0x75a <__floatsisf+0x6c>
 72e:	88 23       	and	r24, r24
 730:	11 f0       	breq	.+4      	; 0x736 <__floatsisf+0x48>
 732:	96 e9       	ldi	r25, 0x96	; 150
 734:	11 c0       	rjmp	.+34     	; 0x758 <__floatsisf+0x6a>
 736:	77 23       	and	r23, r23
 738:	21 f0       	breq	.+8      	; 0x742 <__floatsisf+0x54>
 73a:	9e e8       	ldi	r25, 0x8E	; 142
 73c:	87 2f       	mov	r24, r23
 73e:	76 2f       	mov	r23, r22
 740:	05 c0       	rjmp	.+10     	; 0x74c <__floatsisf+0x5e>
 742:	66 23       	and	r22, r22
 744:	71 f0       	breq	.+28     	; 0x762 <__floatsisf+0x74>
 746:	96 e8       	ldi	r25, 0x86	; 134
 748:	86 2f       	mov	r24, r22
 74a:	70 e0       	ldi	r23, 0x00	; 0
 74c:	60 e0       	ldi	r22, 0x00	; 0
 74e:	2a f0       	brmi	.+10     	; 0x75a <__floatsisf+0x6c>
 750:	9a 95       	dec	r25
 752:	66 0f       	add	r22, r22
 754:	77 1f       	adc	r23, r23
 756:	88 1f       	adc	r24, r24
 758:	da f7       	brpl	.-10     	; 0x750 <__floatsisf+0x62>
 75a:	88 0f       	add	r24, r24
 75c:	96 95       	lsr	r25
 75e:	87 95       	ror	r24
 760:	97 f9       	bld	r25, 7
 762:	08 95       	ret

00000764 <__fp_cmp>:
 764:	99 0f       	add	r25, r25
 766:	00 08       	sbc	r0, r0
 768:	55 0f       	add	r21, r21
 76a:	aa 0b       	sbc	r26, r26
 76c:	e0 e8       	ldi	r30, 0x80	; 128
 76e:	fe ef       	ldi	r31, 0xFE	; 254
 770:	16 16       	cp	r1, r22
 772:	17 06       	cpc	r1, r23
 774:	e8 07       	cpc	r30, r24
 776:	f9 07       	cpc	r31, r25
 778:	c0 f0       	brcs	.+48     	; 0x7aa <__fp_cmp+0x46>
 77a:	12 16       	cp	r1, r18
 77c:	13 06       	cpc	r1, r19
 77e:	e4 07       	cpc	r30, r20
 780:	f5 07       	cpc	r31, r21
 782:	98 f0       	brcs	.+38     	; 0x7aa <__fp_cmp+0x46>
 784:	62 1b       	sub	r22, r18
 786:	73 0b       	sbc	r23, r19
 788:	84 0b       	sbc	r24, r20
 78a:	95 0b       	sbc	r25, r21
 78c:	39 f4       	brne	.+14     	; 0x79c <__fp_cmp+0x38>
 78e:	0a 26       	eor	r0, r26
 790:	61 f0       	breq	.+24     	; 0x7aa <__fp_cmp+0x46>
 792:	23 2b       	or	r18, r19
 794:	24 2b       	or	r18, r20
 796:	25 2b       	or	r18, r21
 798:	21 f4       	brne	.+8      	; 0x7a2 <__fp_cmp+0x3e>
 79a:	08 95       	ret
 79c:	0a 26       	eor	r0, r26
 79e:	09 f4       	brne	.+2      	; 0x7a2 <__fp_cmp+0x3e>
 7a0:	a1 40       	sbci	r26, 0x01	; 1
 7a2:	a6 95       	lsr	r26
 7a4:	8f ef       	ldi	r24, 0xFF	; 255
 7a6:	81 1d       	adc	r24, r1
 7a8:	81 1d       	adc	r24, r1
 7aa:	08 95       	ret

000007ac <__fp_inf>:
 7ac:	97 f9       	bld	r25, 7
 7ae:	9f 67       	ori	r25, 0x7F	; 127
 7b0:	80 e8       	ldi	r24, 0x80	; 128
 7b2:	70 e0       	ldi	r23, 0x00	; 0
 7b4:	60 e0       	ldi	r22, 0x00	; 0
 7b6:	08 95       	ret

000007b8 <__fp_nan>:
 7b8:	9f ef       	ldi	r25, 0xFF	; 255
 7ba:	80 ec       	ldi	r24, 0xC0	; 192
 7bc:	08 95       	ret

000007be <__fp_pscA>:
 7be:	00 24       	eor	r0, r0
 7c0:	0a 94       	dec	r0
 7c2:	16 16       	cp	r1, r22
 7c4:	17 06       	cpc	r1, r23
 7c6:	18 06       	cpc	r1, r24
 7c8:	09 06       	cpc	r0, r25
 7ca:	08 95       	ret

000007cc <__fp_pscB>:
 7cc:	00 24       	eor	r0, r0
 7ce:	0a 94       	dec	r0
 7d0:	12 16       	cp	r1, r18
 7d2:	13 06       	cpc	r1, r19
 7d4:	14 06       	cpc	r1, r20
 7d6:	05 06       	cpc	r0, r21
 7d8:	08 95       	ret

000007da <__fp_round>:
 7da:	09 2e       	mov	r0, r25
 7dc:	03 94       	inc	r0
 7de:	00 0c       	add	r0, r0
 7e0:	11 f4       	brne	.+4      	; 0x7e6 <__fp_round+0xc>
 7e2:	88 23       	and	r24, r24
 7e4:	52 f0       	brmi	.+20     	; 0x7fa <__fp_round+0x20>
 7e6:	bb 0f       	add	r27, r27
 7e8:	40 f4       	brcc	.+16     	; 0x7fa <__fp_round+0x20>
 7ea:	bf 2b       	or	r27, r31
 7ec:	11 f4       	brne	.+4      	; 0x7f2 <__fp_round+0x18>
 7ee:	60 ff       	sbrs	r22, 0
 7f0:	04 c0       	rjmp	.+8      	; 0x7fa <__fp_round+0x20>
 7f2:	6f 5f       	subi	r22, 0xFF	; 255
 7f4:	7f 4f       	sbci	r23, 0xFF	; 255
 7f6:	8f 4f       	sbci	r24, 0xFF	; 255
 7f8:	9f 4f       	sbci	r25, 0xFF	; 255
 7fa:	08 95       	ret

000007fc <__fp_split3>:
 7fc:	57 fd       	sbrc	r21, 7
 7fe:	90 58       	subi	r25, 0x80	; 128
 800:	44 0f       	add	r20, r20
 802:	55 1f       	adc	r21, r21
 804:	59 f0       	breq	.+22     	; 0x81c <__fp_splitA+0x10>
 806:	5f 3f       	cpi	r21, 0xFF	; 255
 808:	71 f0       	breq	.+28     	; 0x826 <__fp_splitA+0x1a>
 80a:	47 95       	ror	r20

0000080c <__fp_splitA>:
 80c:	88 0f       	add	r24, r24
 80e:	97 fb       	bst	r25, 7
 810:	99 1f       	adc	r25, r25
 812:	61 f0       	breq	.+24     	; 0x82c <__fp_splitA+0x20>
 814:	9f 3f       	cpi	r25, 0xFF	; 255
 816:	79 f0       	breq	.+30     	; 0x836 <__fp_splitA+0x2a>
 818:	87 95       	ror	r24
 81a:	08 95       	ret
 81c:	12 16       	cp	r1, r18
 81e:	13 06       	cpc	r1, r19
 820:	14 06       	cpc	r1, r20
 822:	55 1f       	adc	r21, r21
 824:	f2 cf       	rjmp	.-28     	; 0x80a <__fp_split3+0xe>
 826:	46 95       	lsr	r20
 828:	f1 df       	rcall	.-30     	; 0x80c <__fp_splitA>
 82a:	08 c0       	rjmp	.+16     	; 0x83c <__fp_splitA+0x30>
 82c:	16 16       	cp	r1, r22
 82e:	17 06       	cpc	r1, r23
 830:	18 06       	cpc	r1, r24
 832:	99 1f       	adc	r25, r25
 834:	f1 cf       	rjmp	.-30     	; 0x818 <__fp_splitA+0xc>
 836:	86 95       	lsr	r24
 838:	71 05       	cpc	r23, r1
 83a:	61 05       	cpc	r22, r1
 83c:	08 94       	sec
 83e:	08 95       	ret

00000840 <__fp_zero>:
 840:	e8 94       	clt

00000842 <__fp_szero>:
 842:	bb 27       	eor	r27, r27
 844:	66 27       	eor	r22, r22
 846:	77 27       	eor	r23, r23
 848:	cb 01       	movw	r24, r22
 84a:	97 f9       	bld	r25, 7
 84c:	08 95       	ret

0000084e <__gesf2>:
 84e:	0e 94 b2 03 	call	0x764	; 0x764 <__fp_cmp>
 852:	08 f4       	brcc	.+2      	; 0x856 <__gesf2+0x8>
 854:	8f ef       	ldi	r24, 0xFF	; 255
 856:	08 95       	ret

00000858 <__mulsf3>:
 858:	0e 94 3f 04 	call	0x87e	; 0x87e <__mulsf3x>
 85c:	0c 94 ed 03 	jmp	0x7da	; 0x7da <__fp_round>
 860:	0e 94 df 03 	call	0x7be	; 0x7be <__fp_pscA>
 864:	38 f0       	brcs	.+14     	; 0x874 <__mulsf3+0x1c>
 866:	0e 94 e6 03 	call	0x7cc	; 0x7cc <__fp_pscB>
 86a:	20 f0       	brcs	.+8      	; 0x874 <__mulsf3+0x1c>
 86c:	95 23       	and	r25, r21
 86e:	11 f0       	breq	.+4      	; 0x874 <__mulsf3+0x1c>
 870:	0c 94 d6 03 	jmp	0x7ac	; 0x7ac <__fp_inf>
 874:	0c 94 dc 03 	jmp	0x7b8	; 0x7b8 <__fp_nan>
 878:	11 24       	eor	r1, r1
 87a:	0c 94 21 04 	jmp	0x842	; 0x842 <__fp_szero>

0000087e <__mulsf3x>:
 87e:	0e 94 fe 03 	call	0x7fc	; 0x7fc <__fp_split3>
 882:	70 f3       	brcs	.-36     	; 0x860 <__mulsf3+0x8>

00000884 <__mulsf3_pse>:
 884:	95 9f       	mul	r25, r21
 886:	c1 f3       	breq	.-16     	; 0x878 <__mulsf3+0x20>
 888:	95 0f       	add	r25, r21
 88a:	50 e0       	ldi	r21, 0x00	; 0
 88c:	55 1f       	adc	r21, r21
 88e:	62 9f       	mul	r22, r18
 890:	f0 01       	movw	r30, r0
 892:	72 9f       	mul	r23, r18
 894:	bb 27       	eor	r27, r27
 896:	f0 0d       	add	r31, r0
 898:	b1 1d       	adc	r27, r1
 89a:	63 9f       	mul	r22, r19
 89c:	aa 27       	eor	r26, r26
 89e:	f0 0d       	add	r31, r0
 8a0:	b1 1d       	adc	r27, r1
 8a2:	aa 1f       	adc	r26, r26
 8a4:	64 9f       	mul	r22, r20
 8a6:	66 27       	eor	r22, r22
 8a8:	b0 0d       	add	r27, r0
 8aa:	a1 1d       	adc	r26, r1
 8ac:	66 1f       	adc	r22, r22
 8ae:	82 9f       	mul	r24, r18
 8b0:	22 27       	eor	r18, r18
 8b2:	b0 0d       	add	r27, r0
 8b4:	a1 1d       	adc	r26, r1
 8b6:	62 1f       	adc	r22, r18
 8b8:	73 9f       	mul	r23, r19
 8ba:	b0 0d       	add	r27, r0
 8bc:	a1 1d       	adc	r26, r1
 8be:	62 1f       	adc	r22, r18
 8c0:	83 9f       	mul	r24, r19
 8c2:	a0 0d       	add	r26, r0
 8c4:	61 1d       	adc	r22, r1
 8c6:	22 1f       	adc	r18, r18
 8c8:	74 9f       	mul	r23, r20
 8ca:	33 27       	eor	r19, r19
 8cc:	a0 0d       	add	r26, r0
 8ce:	61 1d       	adc	r22, r1
 8d0:	23 1f       	adc	r18, r19
 8d2:	84 9f       	mul	r24, r20
 8d4:	60 0d       	add	r22, r0
 8d6:	21 1d       	adc	r18, r1
 8d8:	82 2f       	mov	r24, r18
 8da:	76 2f       	mov	r23, r22
 8dc:	6a 2f       	mov	r22, r26
 8de:	11 24       	eor	r1, r1
 8e0:	9f 57       	subi	r25, 0x7F	; 127
 8e2:	50 40       	sbci	r21, 0x00	; 0
 8e4:	9a f0       	brmi	.+38     	; 0x90c <__mulsf3_pse+0x88>
 8e6:	f1 f0       	breq	.+60     	; 0x924 <__mulsf3_pse+0xa0>
 8e8:	88 23       	and	r24, r24
 8ea:	4a f0       	brmi	.+18     	; 0x8fe <__mulsf3_pse+0x7a>
 8ec:	ee 0f       	add	r30, r30
 8ee:	ff 1f       	adc	r31, r31
 8f0:	bb 1f       	adc	r27, r27
 8f2:	66 1f       	adc	r22, r22
 8f4:	77 1f       	adc	r23, r23
 8f6:	88 1f       	adc	r24, r24
 8f8:	91 50       	subi	r25, 0x01	; 1
 8fa:	50 40       	sbci	r21, 0x00	; 0
 8fc:	a9 f7       	brne	.-22     	; 0x8e8 <__mulsf3_pse+0x64>
 8fe:	9e 3f       	cpi	r25, 0xFE	; 254
 900:	51 05       	cpc	r21, r1
 902:	80 f0       	brcs	.+32     	; 0x924 <__mulsf3_pse+0xa0>
 904:	0c 94 d6 03 	jmp	0x7ac	; 0x7ac <__fp_inf>
 908:	0c 94 21 04 	jmp	0x842	; 0x842 <__fp_szero>
 90c:	5f 3f       	cpi	r21, 0xFF	; 255
 90e:	e4 f3       	brlt	.-8      	; 0x908 <__mulsf3_pse+0x84>
 910:	98 3e       	cpi	r25, 0xE8	; 232
 912:	d4 f3       	brlt	.-12     	; 0x908 <__mulsf3_pse+0x84>
 914:	86 95       	lsr	r24
 916:	77 95       	ror	r23
 918:	67 95       	ror	r22
 91a:	b7 95       	ror	r27
 91c:	f7 95       	ror	r31
 91e:	e7 95       	ror	r30
 920:	9f 5f       	subi	r25, 0xFF	; 255
 922:	c1 f7       	brne	.-16     	; 0x914 <__mulsf3_pse+0x90>
 924:	fe 2b       	or	r31, r30
 926:	88 0f       	add	r24, r24
 928:	91 1d       	adc	r25, r1
 92a:	96 95       	lsr	r25
 92c:	87 95       	ror	r24
 92e:	97 f9       	bld	r25, 7
 930:	08 95       	ret

00000932 <_exit>:
 932:	f8 94       	cli

00000934 <__stop_program>:
 934:	ff cf       	rjmp	.-2      	; 0x934 <__stop_program>
