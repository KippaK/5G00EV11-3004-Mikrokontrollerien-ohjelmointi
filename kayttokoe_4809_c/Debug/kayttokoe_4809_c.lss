
kayttokoe_4809_c.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00802800  00000554  000005c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000554  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000005ca  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000005fc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000048  00000000  00000000  0000063c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002b88  00000000  00000000  00000684  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000024db  00000000  00000000  0000320c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000042b  00000000  00000000  000056e7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000009c  00000000  00000000  00005b14  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00001628  00000000  00000000  00005bb0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000011e  00000000  00000000  000071d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  000072f6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__ctors_end>
   4:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
   8:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
   c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  18:	0c 94 82 00 	jmp	0x104	; 0x104 <__vector_6>
  1c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  20:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  24:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  2c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  30:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  38:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  3c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  40:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  48:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  50:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  54:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  58:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  5c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  60:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  64:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  68:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  6c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  70:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  74:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  78:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  7c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  80:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  84:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  88:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  8c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  90:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  94:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  98:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  9c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>

000000a0 <__ctors_end>:
  a0:	11 24       	eor	r1, r1
  a2:	1f be       	out	0x3f, r1	; 63
  a4:	cf ef       	ldi	r28, 0xFF	; 255
  a6:	cd bf       	out	0x3d, r28	; 61
  a8:	df e3       	ldi	r29, 0x3F	; 63
  aa:	de bf       	out	0x3e, r29	; 62

000000ac <__do_copy_data>:
  ac:	18 e2       	ldi	r17, 0x28	; 40
  ae:	a0 e0       	ldi	r26, 0x00	; 0
  b0:	b8 e2       	ldi	r27, 0x28	; 40
  b2:	e4 e5       	ldi	r30, 0x54	; 84
  b4:	f5 e0       	ldi	r31, 0x05	; 5
  b6:	02 c0       	rjmp	.+4      	; 0xbc <__do_copy_data+0x10>
  b8:	05 90       	lpm	r0, Z+
  ba:	0d 92       	st	X+, r0
  bc:	a2 30       	cpi	r26, 0x02	; 2
  be:	b1 07       	cpc	r27, r17
  c0:	d9 f7       	brne	.-10     	; 0xb8 <__do_copy_data+0xc>
  c2:	0e 94 0d 01 	call	0x21a	; 0x21a <main>
  c6:	0c 94 a8 02 	jmp	0x550	; 0x550 <_exit>

000000ca <__bad_interrupt>:
  ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ce <ADC_init>:
#define ADC_MAX_VAL 0x03FF

volatile int state = 1;

void ADC_init(void) {
	VREF.CTRLA |= VREF_ADC0REFSEL_4V34_gc;
  ce:	e0 ea       	ldi	r30, 0xA0	; 160
  d0:	f0 e0       	ldi	r31, 0x00	; 0
  d2:	80 81       	ld	r24, Z
  d4:	80 63       	ori	r24, 0x30	; 48
  d6:	80 83       	st	Z, r24
	ADC0.CTRLC = ADC_PRESC_DIV2_gc;
  d8:	e0 e0       	ldi	r30, 0x00	; 0
  da:	f6 e0       	ldi	r31, 0x06	; 6
  dc:	12 82       	std	Z+2, r1	; 0x02
	ADC0.MUXPOS = ADC_MUXPOS_AIN0_gc + ADC_CHANNEL;
  de:	16 82       	std	Z+6, r1	; 0x06
	ADC0.CTRLA = ADC_ENABLE_bm;
  e0:	81 e0       	ldi	r24, 0x01	; 1
  e2:	80 83       	st	Z, r24
  e4:	08 95       	ret

000000e6 <setup>:
}

void setup()
{
	ADC_init();
  e6:	0e 94 67 00 	call	0xce	; 0xce <ADC_init>
	// PB0, PB1, PB2 as output (LEDs)
	PORTB.DIRSET = PIN0_bm | PIN1_bm | PIN2_bm;
  ea:	87 e0       	ldi	r24, 0x07	; 7
  ec:	80 93 21 04 	sts	0x0421, r24	; 0x800421 <__TEXT_REGION_LENGTH__+0x7f4421>
	// PA0 as input (button)
	PORTA.DIRCLR = PIN0_bm;
  f0:	e0 e0       	ldi	r30, 0x00	; 0
  f2:	f4 e0       	ldi	r31, 0x04	; 4
  f4:	81 e0       	ldi	r24, 0x01	; 1
  f6:	82 83       	std	Z+2, r24	; 0x02
	PORTA.PIN0CTRL = PORT_ISC_RISING_gc;
  f8:	92 e0       	ldi	r25, 0x02	; 2
  fa:	90 8b       	std	Z+16, r25	; 0x10
	// PD0 as input (potentionmeter)
	PORTD.DIRCLR = PIN0_bm;	
  fc:	80 93 62 04 	sts	0x0462, r24	; 0x800462 <__TEXT_REGION_LENGTH__+0x7f4462>
	sei();
 100:	78 94       	sei
 102:	08 95       	ret

00000104 <__vector_6>:
}

ISR(PORTA_PORT_vect) {
 104:	1f 92       	push	r1
 106:	0f 92       	push	r0
 108:	0f b6       	in	r0, 0x3f	; 63
 10a:	0f 92       	push	r0
 10c:	11 24       	eor	r1, r1
 10e:	8f 93       	push	r24
 110:	9f 93       	push	r25
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 112:	87 e8       	ldi	r24, 0x87	; 135
 114:	93 e1       	ldi	r25, 0x13	; 19
 116:	01 97       	sbiw	r24, 0x01	; 1
 118:	f1 f7       	brne	.-4      	; 0x116 <__vector_6+0x12>
 11a:	00 c0       	rjmp	.+0      	; 0x11c <__vector_6+0x18>
 11c:	00 00       	nop
	_delay_ms(20);
	if (PORTA.INTFLAGS & PIN0_bm) {  // Check if the interrupt is from PIN2
 11e:	80 91 09 04 	lds	r24, 0x0409	; 0x800409 <__TEXT_REGION_LENGTH__+0x7f4409>
 122:	80 ff       	sbrs	r24, 0
 124:	14 c0       	rjmp	.+40     	; 0x14e <__vector_6+0x4a>
		if (state == 1) { state = 0; }
 126:	80 91 00 28 	lds	r24, 0x2800	; 0x802800 <__DATA_REGION_ORIGIN__>
 12a:	90 91 01 28 	lds	r25, 0x2801	; 0x802801 <__DATA_REGION_ORIGIN__+0x1>
 12e:	01 97       	sbiw	r24, 0x01	; 1
 130:	29 f4       	brne	.+10     	; 0x13c <__vector_6+0x38>
 132:	10 92 00 28 	sts	0x2800, r1	; 0x802800 <__DATA_REGION_ORIGIN__>
 136:	10 92 01 28 	sts	0x2801, r1	; 0x802801 <__DATA_REGION_ORIGIN__+0x1>
 13a:	06 c0       	rjmp	.+12     	; 0x148 <__vector_6+0x44>
		else { state = 1; }
 13c:	81 e0       	ldi	r24, 0x01	; 1
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	80 93 00 28 	sts	0x2800, r24	; 0x802800 <__DATA_REGION_ORIGIN__>
 144:	90 93 01 28 	sts	0x2801, r25	; 0x802801 <__DATA_REGION_ORIGIN__+0x1>
		PORTA.INTFLAGS = PIN0_bm;  // Clear the interrupt flag
 148:	81 e0       	ldi	r24, 0x01	; 1
 14a:	80 93 09 04 	sts	0x0409, r24	; 0x800409 <__TEXT_REGION_LENGTH__+0x7f4409>
	}
}
 14e:	9f 91       	pop	r25
 150:	8f 91       	pop	r24
 152:	0f 90       	pop	r0
 154:	0f be       	out	0x3f, r0	; 63
 156:	0f 90       	pop	r0
 158:	1f 90       	pop	r1
 15a:	18 95       	reti

0000015c <ADC_read>:

uint16_t ADC_read(void) {
	ADC0.COMMAND = ADC_STCONV_bm;
 15c:	81 e0       	ldi	r24, 0x01	; 1
 15e:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7f4608>
	while (!(ADC0.INTFLAGS & ADC_RESRDY_bm));
 162:	80 91 0b 06 	lds	r24, 0x060B	; 0x80060b <__TEXT_REGION_LENGTH__+0x7f460b>
 166:	80 ff       	sbrs	r24, 0
 168:	fc cf       	rjmp	.-8      	; 0x162 <ADC_read+0x6>
	ADC0.INTFLAGS |= ADC_RESRDY_bm;
 16a:	e0 e0       	ldi	r30, 0x00	; 0
 16c:	f6 e0       	ldi	r31, 0x06	; 6
 16e:	83 85       	ldd	r24, Z+11	; 0x0b
 170:	81 60       	ori	r24, 0x01	; 1
 172:	83 87       	std	Z+11, r24	; 0x0b
	return ADC0.RES;
 174:	80 89       	ldd	r24, Z+16	; 0x10
 176:	91 89       	ldd	r25, Z+17	; 0x11
}
 178:	08 95       	ret

0000017a <loop>:

void loop()
{
 17a:	cf 92       	push	r12
 17c:	df 92       	push	r13
 17e:	ef 92       	push	r14
 180:	ff 92       	push	r15
	uint16_t adc_val = ADC_read();
 182:	0e 94 ae 00 	call	0x15c	; 0x15c <ADC_read>
	double voltage  = ((double)adc_val / ADC_MAX_VAL) * 12;
 186:	bc 01       	movw	r22, r24
 188:	80 e0       	ldi	r24, 0x00	; 0
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	0e 94 89 01 	call	0x312	; 0x312 <__floatunsisf>
 190:	20 e0       	ldi	r18, 0x00	; 0
 192:	30 ec       	ldi	r19, 0xC0	; 192
 194:	4f e7       	ldi	r20, 0x7F	; 127
 196:	54 e4       	ldi	r21, 0x44	; 68
 198:	0e 94 17 01 	call	0x22e	; 0x22e <__divsf3>
 19c:	20 e0       	ldi	r18, 0x00	; 0
 19e:	30 e0       	ldi	r19, 0x00	; 0
 1a0:	40 e4       	ldi	r20, 0x40	; 64
 1a2:	51 e4       	ldi	r21, 0x41	; 65
 1a4:	0e 94 3b 02 	call	0x476	; 0x476 <__mulsf3>
 1a8:	6b 01       	movw	r12, r22
 1aa:	7c 01       	movw	r14, r24
	if (state == 0) {
 1ac:	80 91 00 28 	lds	r24, 0x2800	; 0x802800 <__DATA_REGION_ORIGIN__>
 1b0:	90 91 01 28 	lds	r25, 0x2801	; 0x802801 <__DATA_REGION_ORIGIN__+0x1>
 1b4:	89 2b       	or	r24, r25
 1b6:	21 f4       	brne	.+8      	; 0x1c0 <loop+0x46>
		PORTB.OUTCLR = 0x07;
 1b8:	87 e0       	ldi	r24, 0x07	; 7
 1ba:	80 93 26 04 	sts	0x0426, r24	; 0x800426 <__TEXT_REGION_LENGTH__+0x7f4426>
 1be:	28 c0       	rjmp	.+80     	; 0x210 <loop+0x96>
	}
	else if (voltage < 4) {
 1c0:	20 e0       	ldi	r18, 0x00	; 0
 1c2:	30 e0       	ldi	r19, 0x00	; 0
 1c4:	40 e8       	ldi	r20, 0x80	; 128
 1c6:	50 e4       	ldi	r21, 0x40	; 64
 1c8:	c7 01       	movw	r24, r14
 1ca:	b6 01       	movw	r22, r12
 1cc:	0e 94 12 01 	call	0x224	; 0x224 <__cmpsf2>
 1d0:	88 23       	and	r24, r24
 1d2:	3c f4       	brge	.+14     	; 0x1e2 <loop+0x68>
		PORTB.OUTCLR = 0x07;
 1d4:	e0 e2       	ldi	r30, 0x20	; 32
 1d6:	f4 e0       	ldi	r31, 0x04	; 4
 1d8:	87 e0       	ldi	r24, 0x07	; 7
 1da:	86 83       	std	Z+6, r24	; 0x06
		PORTB.OUTSET = 0x01;
 1dc:	81 e0       	ldi	r24, 0x01	; 1
 1de:	85 83       	std	Z+5, r24	; 0x05
 1e0:	17 c0       	rjmp	.+46     	; 0x210 <loop+0x96>
	} else if (voltage < 8) {
 1e2:	20 e0       	ldi	r18, 0x00	; 0
 1e4:	30 e0       	ldi	r19, 0x00	; 0
 1e6:	40 e0       	ldi	r20, 0x00	; 0
 1e8:	51 e4       	ldi	r21, 0x41	; 65
 1ea:	c7 01       	movw	r24, r14
 1ec:	b6 01       	movw	r22, r12
 1ee:	0e 94 12 01 	call	0x224	; 0x224 <__cmpsf2>
 1f2:	88 23       	and	r24, r24
 1f4:	3c f4       	brge	.+14     	; 0x204 <loop+0x8a>
		PORTB.OUTCLR = 0x07;
 1f6:	e0 e2       	ldi	r30, 0x20	; 32
 1f8:	f4 e0       	ldi	r31, 0x04	; 4
 1fa:	87 e0       	ldi	r24, 0x07	; 7
 1fc:	86 83       	std	Z+6, r24	; 0x06
		PORTB.OUTSET = 0x02;
 1fe:	82 e0       	ldi	r24, 0x02	; 2
 200:	85 83       	std	Z+5, r24	; 0x05
 202:	06 c0       	rjmp	.+12     	; 0x210 <loop+0x96>
	} else {
		PORTB.OUTCLR = 0x07;
 204:	e0 e2       	ldi	r30, 0x20	; 32
 206:	f4 e0       	ldi	r31, 0x04	; 4
 208:	87 e0       	ldi	r24, 0x07	; 7
 20a:	86 83       	std	Z+6, r24	; 0x06
		PORTB.OUTSET = 0x04;
 20c:	84 e0       	ldi	r24, 0x04	; 4
 20e:	85 83       	std	Z+5, r24	; 0x05
	}
}
 210:	ff 90       	pop	r15
 212:	ef 90       	pop	r14
 214:	df 90       	pop	r13
 216:	cf 90       	pop	r12
 218:	08 95       	ret

0000021a <main>:


int main(void)
{
	setup();
 21a:	0e 94 73 00 	call	0xe6	; 0xe6 <setup>
	while (1) 
    {
		loop();
 21e:	0e 94 bd 00 	call	0x17a	; 0x17a <loop>
 222:	fd cf       	rjmp	.-6      	; 0x21e <main+0x4>

00000224 <__cmpsf2>:
 224:	0e 94 c6 01 	call	0x38c	; 0x38c <__fp_cmp>
 228:	08 f4       	brcc	.+2      	; 0x22c <__cmpsf2+0x8>
 22a:	81 e0       	ldi	r24, 0x01	; 1
 22c:	08 95       	ret

0000022e <__divsf3>:
 22e:	0e 94 2b 01 	call	0x256	; 0x256 <__divsf3x>
 232:	0c 94 01 02 	jmp	0x402	; 0x402 <__fp_round>
 236:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <__fp_pscB>
 23a:	58 f0       	brcs	.+22     	; 0x252 <__divsf3+0x24>
 23c:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <__fp_pscA>
 240:	40 f0       	brcs	.+16     	; 0x252 <__divsf3+0x24>
 242:	29 f4       	brne	.+10     	; 0x24e <__divsf3+0x20>
 244:	5f 3f       	cpi	r21, 0xFF	; 255
 246:	29 f0       	breq	.+10     	; 0x252 <__divsf3+0x24>
 248:	0c 94 ea 01 	jmp	0x3d4	; 0x3d4 <__fp_inf>
 24c:	51 11       	cpse	r21, r1
 24e:	0c 94 35 02 	jmp	0x46a	; 0x46a <__fp_szero>
 252:	0c 94 f0 01 	jmp	0x3e0	; 0x3e0 <__fp_nan>

00000256 <__divsf3x>:
 256:	0e 94 12 02 	call	0x424	; 0x424 <__fp_split3>
 25a:	68 f3       	brcs	.-38     	; 0x236 <__divsf3+0x8>

0000025c <__divsf3_pse>:
 25c:	99 23       	and	r25, r25
 25e:	b1 f3       	breq	.-20     	; 0x24c <__divsf3+0x1e>
 260:	55 23       	and	r21, r21
 262:	91 f3       	breq	.-28     	; 0x248 <__divsf3+0x1a>
 264:	95 1b       	sub	r25, r21
 266:	55 0b       	sbc	r21, r21
 268:	bb 27       	eor	r27, r27
 26a:	aa 27       	eor	r26, r26
 26c:	62 17       	cp	r22, r18
 26e:	73 07       	cpc	r23, r19
 270:	84 07       	cpc	r24, r20
 272:	38 f0       	brcs	.+14     	; 0x282 <__divsf3_pse+0x26>
 274:	9f 5f       	subi	r25, 0xFF	; 255
 276:	5f 4f       	sbci	r21, 0xFF	; 255
 278:	22 0f       	add	r18, r18
 27a:	33 1f       	adc	r19, r19
 27c:	44 1f       	adc	r20, r20
 27e:	aa 1f       	adc	r26, r26
 280:	a9 f3       	breq	.-22     	; 0x26c <__divsf3_pse+0x10>
 282:	35 d0       	rcall	.+106    	; 0x2ee <__divsf3_pse+0x92>
 284:	0e 2e       	mov	r0, r30
 286:	3a f0       	brmi	.+14     	; 0x296 <__divsf3_pse+0x3a>
 288:	e0 e8       	ldi	r30, 0x80	; 128
 28a:	32 d0       	rcall	.+100    	; 0x2f0 <__divsf3_pse+0x94>
 28c:	91 50       	subi	r25, 0x01	; 1
 28e:	50 40       	sbci	r21, 0x00	; 0
 290:	e6 95       	lsr	r30
 292:	00 1c       	adc	r0, r0
 294:	ca f7       	brpl	.-14     	; 0x288 <__divsf3_pse+0x2c>
 296:	2b d0       	rcall	.+86     	; 0x2ee <__divsf3_pse+0x92>
 298:	fe 2f       	mov	r31, r30
 29a:	29 d0       	rcall	.+82     	; 0x2ee <__divsf3_pse+0x92>
 29c:	66 0f       	add	r22, r22
 29e:	77 1f       	adc	r23, r23
 2a0:	88 1f       	adc	r24, r24
 2a2:	bb 1f       	adc	r27, r27
 2a4:	26 17       	cp	r18, r22
 2a6:	37 07       	cpc	r19, r23
 2a8:	48 07       	cpc	r20, r24
 2aa:	ab 07       	cpc	r26, r27
 2ac:	b0 e8       	ldi	r27, 0x80	; 128
 2ae:	09 f0       	breq	.+2      	; 0x2b2 <__divsf3_pse+0x56>
 2b0:	bb 0b       	sbc	r27, r27
 2b2:	80 2d       	mov	r24, r0
 2b4:	bf 01       	movw	r22, r30
 2b6:	ff 27       	eor	r31, r31
 2b8:	93 58       	subi	r25, 0x83	; 131
 2ba:	5f 4f       	sbci	r21, 0xFF	; 255
 2bc:	3a f0       	brmi	.+14     	; 0x2cc <__divsf3_pse+0x70>
 2be:	9e 3f       	cpi	r25, 0xFE	; 254
 2c0:	51 05       	cpc	r21, r1
 2c2:	78 f0       	brcs	.+30     	; 0x2e2 <__divsf3_pse+0x86>
 2c4:	0c 94 ea 01 	jmp	0x3d4	; 0x3d4 <__fp_inf>
 2c8:	0c 94 35 02 	jmp	0x46a	; 0x46a <__fp_szero>
 2cc:	5f 3f       	cpi	r21, 0xFF	; 255
 2ce:	e4 f3       	brlt	.-8      	; 0x2c8 <__divsf3_pse+0x6c>
 2d0:	98 3e       	cpi	r25, 0xE8	; 232
 2d2:	d4 f3       	brlt	.-12     	; 0x2c8 <__divsf3_pse+0x6c>
 2d4:	86 95       	lsr	r24
 2d6:	77 95       	ror	r23
 2d8:	67 95       	ror	r22
 2da:	b7 95       	ror	r27
 2dc:	f7 95       	ror	r31
 2de:	9f 5f       	subi	r25, 0xFF	; 255
 2e0:	c9 f7       	brne	.-14     	; 0x2d4 <__divsf3_pse+0x78>
 2e2:	88 0f       	add	r24, r24
 2e4:	91 1d       	adc	r25, r1
 2e6:	96 95       	lsr	r25
 2e8:	87 95       	ror	r24
 2ea:	97 f9       	bld	r25, 7
 2ec:	08 95       	ret
 2ee:	e1 e0       	ldi	r30, 0x01	; 1
 2f0:	66 0f       	add	r22, r22
 2f2:	77 1f       	adc	r23, r23
 2f4:	88 1f       	adc	r24, r24
 2f6:	bb 1f       	adc	r27, r27
 2f8:	62 17       	cp	r22, r18
 2fa:	73 07       	cpc	r23, r19
 2fc:	84 07       	cpc	r24, r20
 2fe:	ba 07       	cpc	r27, r26
 300:	20 f0       	brcs	.+8      	; 0x30a <__divsf3_pse+0xae>
 302:	62 1b       	sub	r22, r18
 304:	73 0b       	sbc	r23, r19
 306:	84 0b       	sbc	r24, r20
 308:	ba 0b       	sbc	r27, r26
 30a:	ee 1f       	adc	r30, r30
 30c:	88 f7       	brcc	.-30     	; 0x2f0 <__divsf3_pse+0x94>
 30e:	e0 95       	com	r30
 310:	08 95       	ret

00000312 <__floatunsisf>:
 312:	e8 94       	clt
 314:	09 c0       	rjmp	.+18     	; 0x328 <__floatsisf+0x12>

00000316 <__floatsisf>:
 316:	97 fb       	bst	r25, 7
 318:	3e f4       	brtc	.+14     	; 0x328 <__floatsisf+0x12>
 31a:	90 95       	com	r25
 31c:	80 95       	com	r24
 31e:	70 95       	com	r23
 320:	61 95       	neg	r22
 322:	7f 4f       	sbci	r23, 0xFF	; 255
 324:	8f 4f       	sbci	r24, 0xFF	; 255
 326:	9f 4f       	sbci	r25, 0xFF	; 255
 328:	99 23       	and	r25, r25
 32a:	a9 f0       	breq	.+42     	; 0x356 <__floatsisf+0x40>
 32c:	f9 2f       	mov	r31, r25
 32e:	96 e9       	ldi	r25, 0x96	; 150
 330:	bb 27       	eor	r27, r27
 332:	93 95       	inc	r25
 334:	f6 95       	lsr	r31
 336:	87 95       	ror	r24
 338:	77 95       	ror	r23
 33a:	67 95       	ror	r22
 33c:	b7 95       	ror	r27
 33e:	f1 11       	cpse	r31, r1
 340:	f8 cf       	rjmp	.-16     	; 0x332 <__floatsisf+0x1c>
 342:	fa f4       	brpl	.+62     	; 0x382 <__floatsisf+0x6c>
 344:	bb 0f       	add	r27, r27
 346:	11 f4       	brne	.+4      	; 0x34c <__floatsisf+0x36>
 348:	60 ff       	sbrs	r22, 0
 34a:	1b c0       	rjmp	.+54     	; 0x382 <__floatsisf+0x6c>
 34c:	6f 5f       	subi	r22, 0xFF	; 255
 34e:	7f 4f       	sbci	r23, 0xFF	; 255
 350:	8f 4f       	sbci	r24, 0xFF	; 255
 352:	9f 4f       	sbci	r25, 0xFF	; 255
 354:	16 c0       	rjmp	.+44     	; 0x382 <__floatsisf+0x6c>
 356:	88 23       	and	r24, r24
 358:	11 f0       	breq	.+4      	; 0x35e <__floatsisf+0x48>
 35a:	96 e9       	ldi	r25, 0x96	; 150
 35c:	11 c0       	rjmp	.+34     	; 0x380 <__floatsisf+0x6a>
 35e:	77 23       	and	r23, r23
 360:	21 f0       	breq	.+8      	; 0x36a <__floatsisf+0x54>
 362:	9e e8       	ldi	r25, 0x8E	; 142
 364:	87 2f       	mov	r24, r23
 366:	76 2f       	mov	r23, r22
 368:	05 c0       	rjmp	.+10     	; 0x374 <__floatsisf+0x5e>
 36a:	66 23       	and	r22, r22
 36c:	71 f0       	breq	.+28     	; 0x38a <__floatsisf+0x74>
 36e:	96 e8       	ldi	r25, 0x86	; 134
 370:	86 2f       	mov	r24, r22
 372:	70 e0       	ldi	r23, 0x00	; 0
 374:	60 e0       	ldi	r22, 0x00	; 0
 376:	2a f0       	brmi	.+10     	; 0x382 <__floatsisf+0x6c>
 378:	9a 95       	dec	r25
 37a:	66 0f       	add	r22, r22
 37c:	77 1f       	adc	r23, r23
 37e:	88 1f       	adc	r24, r24
 380:	da f7       	brpl	.-10     	; 0x378 <__floatsisf+0x62>
 382:	88 0f       	add	r24, r24
 384:	96 95       	lsr	r25
 386:	87 95       	ror	r24
 388:	97 f9       	bld	r25, 7
 38a:	08 95       	ret

0000038c <__fp_cmp>:
 38c:	99 0f       	add	r25, r25
 38e:	00 08       	sbc	r0, r0
 390:	55 0f       	add	r21, r21
 392:	aa 0b       	sbc	r26, r26
 394:	e0 e8       	ldi	r30, 0x80	; 128
 396:	fe ef       	ldi	r31, 0xFE	; 254
 398:	16 16       	cp	r1, r22
 39a:	17 06       	cpc	r1, r23
 39c:	e8 07       	cpc	r30, r24
 39e:	f9 07       	cpc	r31, r25
 3a0:	c0 f0       	brcs	.+48     	; 0x3d2 <__fp_cmp+0x46>
 3a2:	12 16       	cp	r1, r18
 3a4:	13 06       	cpc	r1, r19
 3a6:	e4 07       	cpc	r30, r20
 3a8:	f5 07       	cpc	r31, r21
 3aa:	98 f0       	brcs	.+38     	; 0x3d2 <__fp_cmp+0x46>
 3ac:	62 1b       	sub	r22, r18
 3ae:	73 0b       	sbc	r23, r19
 3b0:	84 0b       	sbc	r24, r20
 3b2:	95 0b       	sbc	r25, r21
 3b4:	39 f4       	brne	.+14     	; 0x3c4 <__fp_cmp+0x38>
 3b6:	0a 26       	eor	r0, r26
 3b8:	61 f0       	breq	.+24     	; 0x3d2 <__fp_cmp+0x46>
 3ba:	23 2b       	or	r18, r19
 3bc:	24 2b       	or	r18, r20
 3be:	25 2b       	or	r18, r21
 3c0:	21 f4       	brne	.+8      	; 0x3ca <__fp_cmp+0x3e>
 3c2:	08 95       	ret
 3c4:	0a 26       	eor	r0, r26
 3c6:	09 f4       	brne	.+2      	; 0x3ca <__fp_cmp+0x3e>
 3c8:	a1 40       	sbci	r26, 0x01	; 1
 3ca:	a6 95       	lsr	r26
 3cc:	8f ef       	ldi	r24, 0xFF	; 255
 3ce:	81 1d       	adc	r24, r1
 3d0:	81 1d       	adc	r24, r1
 3d2:	08 95       	ret

000003d4 <__fp_inf>:
 3d4:	97 f9       	bld	r25, 7
 3d6:	9f 67       	ori	r25, 0x7F	; 127
 3d8:	80 e8       	ldi	r24, 0x80	; 128
 3da:	70 e0       	ldi	r23, 0x00	; 0
 3dc:	60 e0       	ldi	r22, 0x00	; 0
 3de:	08 95       	ret

000003e0 <__fp_nan>:
 3e0:	9f ef       	ldi	r25, 0xFF	; 255
 3e2:	80 ec       	ldi	r24, 0xC0	; 192
 3e4:	08 95       	ret

000003e6 <__fp_pscA>:
 3e6:	00 24       	eor	r0, r0
 3e8:	0a 94       	dec	r0
 3ea:	16 16       	cp	r1, r22
 3ec:	17 06       	cpc	r1, r23
 3ee:	18 06       	cpc	r1, r24
 3f0:	09 06       	cpc	r0, r25
 3f2:	08 95       	ret

000003f4 <__fp_pscB>:
 3f4:	00 24       	eor	r0, r0
 3f6:	0a 94       	dec	r0
 3f8:	12 16       	cp	r1, r18
 3fa:	13 06       	cpc	r1, r19
 3fc:	14 06       	cpc	r1, r20
 3fe:	05 06       	cpc	r0, r21
 400:	08 95       	ret

00000402 <__fp_round>:
 402:	09 2e       	mov	r0, r25
 404:	03 94       	inc	r0
 406:	00 0c       	add	r0, r0
 408:	11 f4       	brne	.+4      	; 0x40e <__fp_round+0xc>
 40a:	88 23       	and	r24, r24
 40c:	52 f0       	brmi	.+20     	; 0x422 <__fp_round+0x20>
 40e:	bb 0f       	add	r27, r27
 410:	40 f4       	brcc	.+16     	; 0x422 <__fp_round+0x20>
 412:	bf 2b       	or	r27, r31
 414:	11 f4       	brne	.+4      	; 0x41a <__fp_round+0x18>
 416:	60 ff       	sbrs	r22, 0
 418:	04 c0       	rjmp	.+8      	; 0x422 <__fp_round+0x20>
 41a:	6f 5f       	subi	r22, 0xFF	; 255
 41c:	7f 4f       	sbci	r23, 0xFF	; 255
 41e:	8f 4f       	sbci	r24, 0xFF	; 255
 420:	9f 4f       	sbci	r25, 0xFF	; 255
 422:	08 95       	ret

00000424 <__fp_split3>:
 424:	57 fd       	sbrc	r21, 7
 426:	90 58       	subi	r25, 0x80	; 128
 428:	44 0f       	add	r20, r20
 42a:	55 1f       	adc	r21, r21
 42c:	59 f0       	breq	.+22     	; 0x444 <__fp_splitA+0x10>
 42e:	5f 3f       	cpi	r21, 0xFF	; 255
 430:	71 f0       	breq	.+28     	; 0x44e <__fp_splitA+0x1a>
 432:	47 95       	ror	r20

00000434 <__fp_splitA>:
 434:	88 0f       	add	r24, r24
 436:	97 fb       	bst	r25, 7
 438:	99 1f       	adc	r25, r25
 43a:	61 f0       	breq	.+24     	; 0x454 <__fp_splitA+0x20>
 43c:	9f 3f       	cpi	r25, 0xFF	; 255
 43e:	79 f0       	breq	.+30     	; 0x45e <__fp_splitA+0x2a>
 440:	87 95       	ror	r24
 442:	08 95       	ret
 444:	12 16       	cp	r1, r18
 446:	13 06       	cpc	r1, r19
 448:	14 06       	cpc	r1, r20
 44a:	55 1f       	adc	r21, r21
 44c:	f2 cf       	rjmp	.-28     	; 0x432 <__fp_split3+0xe>
 44e:	46 95       	lsr	r20
 450:	f1 df       	rcall	.-30     	; 0x434 <__fp_splitA>
 452:	08 c0       	rjmp	.+16     	; 0x464 <__fp_splitA+0x30>
 454:	16 16       	cp	r1, r22
 456:	17 06       	cpc	r1, r23
 458:	18 06       	cpc	r1, r24
 45a:	99 1f       	adc	r25, r25
 45c:	f1 cf       	rjmp	.-30     	; 0x440 <__fp_splitA+0xc>
 45e:	86 95       	lsr	r24
 460:	71 05       	cpc	r23, r1
 462:	61 05       	cpc	r22, r1
 464:	08 94       	sec
 466:	08 95       	ret

00000468 <__fp_zero>:
 468:	e8 94       	clt

0000046a <__fp_szero>:
 46a:	bb 27       	eor	r27, r27
 46c:	66 27       	eor	r22, r22
 46e:	77 27       	eor	r23, r23
 470:	cb 01       	movw	r24, r22
 472:	97 f9       	bld	r25, 7
 474:	08 95       	ret

00000476 <__mulsf3>:
 476:	0e 94 4e 02 	call	0x49c	; 0x49c <__mulsf3x>
 47a:	0c 94 01 02 	jmp	0x402	; 0x402 <__fp_round>
 47e:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <__fp_pscA>
 482:	38 f0       	brcs	.+14     	; 0x492 <__mulsf3+0x1c>
 484:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <__fp_pscB>
 488:	20 f0       	brcs	.+8      	; 0x492 <__mulsf3+0x1c>
 48a:	95 23       	and	r25, r21
 48c:	11 f0       	breq	.+4      	; 0x492 <__mulsf3+0x1c>
 48e:	0c 94 ea 01 	jmp	0x3d4	; 0x3d4 <__fp_inf>
 492:	0c 94 f0 01 	jmp	0x3e0	; 0x3e0 <__fp_nan>
 496:	11 24       	eor	r1, r1
 498:	0c 94 35 02 	jmp	0x46a	; 0x46a <__fp_szero>

0000049c <__mulsf3x>:
 49c:	0e 94 12 02 	call	0x424	; 0x424 <__fp_split3>
 4a0:	70 f3       	brcs	.-36     	; 0x47e <__mulsf3+0x8>

000004a2 <__mulsf3_pse>:
 4a2:	95 9f       	mul	r25, r21
 4a4:	c1 f3       	breq	.-16     	; 0x496 <__mulsf3+0x20>
 4a6:	95 0f       	add	r25, r21
 4a8:	50 e0       	ldi	r21, 0x00	; 0
 4aa:	55 1f       	adc	r21, r21
 4ac:	62 9f       	mul	r22, r18
 4ae:	f0 01       	movw	r30, r0
 4b0:	72 9f       	mul	r23, r18
 4b2:	bb 27       	eor	r27, r27
 4b4:	f0 0d       	add	r31, r0
 4b6:	b1 1d       	adc	r27, r1
 4b8:	63 9f       	mul	r22, r19
 4ba:	aa 27       	eor	r26, r26
 4bc:	f0 0d       	add	r31, r0
 4be:	b1 1d       	adc	r27, r1
 4c0:	aa 1f       	adc	r26, r26
 4c2:	64 9f       	mul	r22, r20
 4c4:	66 27       	eor	r22, r22
 4c6:	b0 0d       	add	r27, r0
 4c8:	a1 1d       	adc	r26, r1
 4ca:	66 1f       	adc	r22, r22
 4cc:	82 9f       	mul	r24, r18
 4ce:	22 27       	eor	r18, r18
 4d0:	b0 0d       	add	r27, r0
 4d2:	a1 1d       	adc	r26, r1
 4d4:	62 1f       	adc	r22, r18
 4d6:	73 9f       	mul	r23, r19
 4d8:	b0 0d       	add	r27, r0
 4da:	a1 1d       	adc	r26, r1
 4dc:	62 1f       	adc	r22, r18
 4de:	83 9f       	mul	r24, r19
 4e0:	a0 0d       	add	r26, r0
 4e2:	61 1d       	adc	r22, r1
 4e4:	22 1f       	adc	r18, r18
 4e6:	74 9f       	mul	r23, r20
 4e8:	33 27       	eor	r19, r19
 4ea:	a0 0d       	add	r26, r0
 4ec:	61 1d       	adc	r22, r1
 4ee:	23 1f       	adc	r18, r19
 4f0:	84 9f       	mul	r24, r20
 4f2:	60 0d       	add	r22, r0
 4f4:	21 1d       	adc	r18, r1
 4f6:	82 2f       	mov	r24, r18
 4f8:	76 2f       	mov	r23, r22
 4fa:	6a 2f       	mov	r22, r26
 4fc:	11 24       	eor	r1, r1
 4fe:	9f 57       	subi	r25, 0x7F	; 127
 500:	50 40       	sbci	r21, 0x00	; 0
 502:	9a f0       	brmi	.+38     	; 0x52a <__mulsf3_pse+0x88>
 504:	f1 f0       	breq	.+60     	; 0x542 <__mulsf3_pse+0xa0>
 506:	88 23       	and	r24, r24
 508:	4a f0       	brmi	.+18     	; 0x51c <__mulsf3_pse+0x7a>
 50a:	ee 0f       	add	r30, r30
 50c:	ff 1f       	adc	r31, r31
 50e:	bb 1f       	adc	r27, r27
 510:	66 1f       	adc	r22, r22
 512:	77 1f       	adc	r23, r23
 514:	88 1f       	adc	r24, r24
 516:	91 50       	subi	r25, 0x01	; 1
 518:	50 40       	sbci	r21, 0x00	; 0
 51a:	a9 f7       	brne	.-22     	; 0x506 <__mulsf3_pse+0x64>
 51c:	9e 3f       	cpi	r25, 0xFE	; 254
 51e:	51 05       	cpc	r21, r1
 520:	80 f0       	brcs	.+32     	; 0x542 <__mulsf3_pse+0xa0>
 522:	0c 94 ea 01 	jmp	0x3d4	; 0x3d4 <__fp_inf>
 526:	0c 94 35 02 	jmp	0x46a	; 0x46a <__fp_szero>
 52a:	5f 3f       	cpi	r21, 0xFF	; 255
 52c:	e4 f3       	brlt	.-8      	; 0x526 <__mulsf3_pse+0x84>
 52e:	98 3e       	cpi	r25, 0xE8	; 232
 530:	d4 f3       	brlt	.-12     	; 0x526 <__mulsf3_pse+0x84>
 532:	86 95       	lsr	r24
 534:	77 95       	ror	r23
 536:	67 95       	ror	r22
 538:	b7 95       	ror	r27
 53a:	f7 95       	ror	r31
 53c:	e7 95       	ror	r30
 53e:	9f 5f       	subi	r25, 0xFF	; 255
 540:	c1 f7       	brne	.-16     	; 0x532 <__mulsf3_pse+0x90>
 542:	fe 2b       	or	r31, r30
 544:	88 0f       	add	r24, r24
 546:	91 1d       	adc	r25, r1
 548:	96 95       	lsr	r25
 54a:	87 95       	ror	r24
 54c:	97 f9       	bld	r25, 7
 54e:	08 95       	ret

00000550 <_exit>:
 550:	f8 94       	cli

00000552 <__stop_program>:
 552:	ff cf       	rjmp	.-2      	; 0x552 <__stop_program>
